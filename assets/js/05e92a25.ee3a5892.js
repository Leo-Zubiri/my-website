"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8630],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>g});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),u=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},p=function(e){var r=u(e.components);return t.createElement(l.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||s;return n?t.createElement(g,o(o({ref:r},p),{},{components:n})):t.createElement(g,o({ref:r},p))}));function g(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var u=2;u<s;u++)o[u]=n[u];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2367:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var t=n(7462),a=(n(7294),n(3905));const s={},o="Express",i={unversionedId:"nodejs/Express",id:"nodejs/Express",title:"Express",description:"Express es un framework web minimalista para NodeJS.",source:"@site/docs/nodejs/3. Express.md",sourceDirName:"nodejs",slug:"/nodejs/Express",permalink:"/my-website/docs/nodejs/Express",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/nodejs/3. Express.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Consola Interactiva",permalink:"/my-website/docs/nodejs/Consola_Interactiva"},next:{title:"Bienes Ra\xedces Proyecto",permalink:"/my-website/docs/nodejs/Bienes"}},l={},u=[{value:"Crear Servidor",id:"crear-servidor",level:2},{value:"Routing",id:"routing",level:2},{value:"Rutas individuales o agrupadas",id:"rutas-individuales-o-agrupadas",level:3},{value:"Validaci\xf3n",id:"validaci\xf3n",level:2}],p={toc:u},c="wrapper";function d(e){let{components:r,...n}=e;return(0,a.kt)(c,(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"express"},"Express"),(0,a.kt)("p",null,"Express es un framework web minimalista para NodeJS."),(0,a.kt)("p",null,"Incluye:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Routing y redireccionmiento"),(0,a.kt)("li",{parentName:"ol"},"Middleware"),(0,a.kt)("li",{parentName:"ol"},"Manejo de errores"),(0,a.kt)("li",{parentName:"ol"},"M\xe9todos HTTP"),(0,a.kt)("li",{parentName:"ol"},"Template engines")),(0,a.kt)("p",null,"En caso de necesitar mas funcionalidades se instala alg\xfan paquete via NPM."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"npm i express")),(0,a.kt)("h2",{id:"crear-servidor"},"Crear Servidor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},"const express = require('express');\n\n// Crear la app\nconst app = express();\n\n// Routing\napp.get('/',function(req,res){\n    res.send('Hola mundo desde Express');\n});\n\n// Definir puerto\nconst port = 3000;\n\napp.listen(port,() => { \n    console.log(`Servidor funcionando en el puerto ${port}`);\n});\n")),(0,a.kt)("p",null,"Lo anterior tiene una ruta configurada para ",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:3000/")," la cual retorna un hola mundo."),(0,a.kt)("h2",{id:"routing"},"Routing"),(0,a.kt)("p",null,"Es recomendable destinar un directorio para almacenar todos los archivos de las rutas"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"./routes/userRoutes.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./routes/userRoutes.js"',title:'"./routes/userRoutes.js"'},"import express from \"express\";\nconst router = express.Router();\n\nrouter.get('/',function(req,res){\n    res.send('Hola mundo desde Express');\n});\n\nexport default router;\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},"import userRoutes from './routes/userRoutes.js'\n// Routing\napp.use('/',userRoutes);\n// Usa las rutas que empiecen con una diagonal\n")),(0,a.kt)("h3",{id:"rutas-individuales-o-agrupadas"},"Rutas individuales o agrupadas"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"router.get('/',()=>{})\nrouter.post('/',()=>{})\nrouter.put('/',()=>{})\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"router.route('/')\n    .get(function(req,res){})\n    .post(function(req,res){})\n    .put(function(req,res){})\n")),(0,a.kt)("h2",{id:"validaci\xf3n"},"Validaci\xf3n"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"npm i express-validator")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const registrar = async (req,res) => { \n    // Validation\n    await check('name').notEmpty().withMessage('Nombre no puede ir vac\xedo').run(req)\n    await check('email').isEmail().withMessage('No es un email v\xe1lido').run(req)\n    await check('password').isLength({min: 6}).withMessage('Password debe de ser de al menos 6 caracteres').run(req)\n    await check('password_confirmation').equals('password').withMessage('Los Passwords no coinciden').run(req)\n\n    let errores = validationResult(req)\n\n    // Verificar que el resultado est\xe9 vac\xedo\n    if(errores.isEmpty()){\n        const usuario = await Usuario.create(req.body);\n        res.json(usuario)\n    }else{\n        res.render('auth/register',{\n            pagina: 'Crear Cuenta',\n            errores: errores.array()\n        });\n    }\n}\n")))}d.isMDXComponent=!0}}]);