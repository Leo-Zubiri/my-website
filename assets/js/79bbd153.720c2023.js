"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7949],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>g});var a=r(67294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var i=a.createContext({}),u=function(e){var n=a.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},c=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),m=t,g=p["".concat(i,".").concat(m)]||p[m]||d[m]||o;return r?a.createElement(g,s(s({ref:n},c),{},{components:r})):a.createElement(g,s({ref:n},c))}));function g(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,s=new Array(o);s[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[p]="string"==typeof e?e:t,s[1]=l;for(var u=2;u<o;u++)s[u]=r[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},29026:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=r(87462),t=(r(67294),r(3905));const o={},s="Autenticaci\xf3n",l={unversionedId:"laravel/laravel-react/Notes/auth",id:"laravel/laravel-react/Notes/auth",title:"Autenticaci\xf3n",description:"Desde laravel",source:"@site/docs/laravel/3-laravel-react/Notes/17-auth.md",sourceDirName:"laravel/3-laravel-react/Notes",slug:"/laravel/laravel-react/Notes/auth",permalink:"/my-website/docs/laravel/laravel-react/Notes/auth",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/laravel/3-laravel-react/Notes/17-auth.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useSWR",permalink:"/my-website/docs/laravel/laravel-react/Notes/swr"},next:{title:"CORS",permalink:"/my-website/docs/laravel/laravel-react/Notes/CORS"}},i={},u=[{value:"Desde laravel",id:"desde-laravel",level:2},{value:"Request Personalizados",id:"request-personalizados",level:3},{value:"Desde React",id:"desde-react",level:2},{value:"Mensajes de error",id:"mensajes-de-error",level:3},{value:"Componente mensaje error",id:"componente-mensaje-error",level:3},{value:"TOKEN",id:"token",level:2},{value:"Crear un token de usuario",id:"crear-un-token-de-usuario",level:3},{value:"Peticion desde Postman/Insomnia",id:"peticion-desde-postmaninsomnia",level:3},{value:"Login",id:"login",level:2},{value:"useAuth",id:"useauth",level:2}],c={toc:u},p="wrapper";function d(e){let{components:n,...o}=e;return(0,t.kt)(p,(0,a.Z)({},c,o,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"autenticaci\xf3n"},"Autenticaci\xf3n"),(0,t.kt)("h2",{id:"desde-laravel"},"Desde laravel"),(0,t.kt)("p",null,"Crear un controlador para la autenticaci\xf3n:"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"php artisan make:controller AuthController")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"    public function register(Request $request){\n\n    }\n\n    public function login(Request $request){\n        \n    }\n\n    public function logout(Request $request){\n        \n    }\n")),(0,t.kt)("p",null,"Crear rutas"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"//Autenticaci\xf3n\nRoute::post('/register',[AuthController::class,'register']);\n")),(0,t.kt)("h3",{id:"request-personalizados"},"Request Personalizados"),(0,t.kt)("p",null,"Request para validaciones avanzadas. Personalizar las validaciones de la informaci\xf3n que ingresa el usuario."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"php artisan make:request NombreRequest")),(0,t.kt)("p",null,"De esta forma se puede utilizar de forma personalizada el request en los m\xe9todos del controlador:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"public function register(NombreRequest $request){\n    $data = $request->validated();\n}\n")),(0,t.kt)("p",null,"La validacion del request personalizado depende del archivo Request creado el cual tiene los siguientes dos m\xe9todos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"use Illuminate\\Validation\\Rules\\Password;\n\n...\n\n\n    public function authorize()\n    {   //Por defecto nos deje hacer el request\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array<string, mixed>\n     */\n    public function rules()\n    {\n        return [\n            'name' => ['required','string'],\n            'email' => ['required','email','unique:users,email'],\n            'password' => [\n                'required',\n                'confirmed',\n                Password::min(8)->letters()->symbols()->numbers()\n            ],\n        ];\n    }\n\n    // Si se desea crear mensajes personalizados\n    public function messages(){\n        return [\n            'name.required' => 'El nombre es obligatorio',\n            'email.required' => 'El email es obligatorio',\n            'email.email' => 'El correo no tiene un formato v\xe1lido',\n        ];\n    }\n")),(0,t.kt)("h2",{id:"desde-react"},"Desde React"),(0,t.kt)("p",null,"Importar ",(0,t.kt)("inlineCode",{parentName:"p"},"createRef")," y crear una referencia a cada input del formulario:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},'import { createRef,useState } from "react"\n\n...\n\n  const nameRef = createRef();\n  const emailRef = createRef();\n  const passwordRef = createRef();\n  const passwordConfirmationRef = createRef();\n\n...\n\n    <input \n      id="name"\n      type="text"\n      name="name"\n      placeholder="Tu Nombre"\n      ref={nameRef}\n    />\n')),(0,t.kt)("p",null,"En el formulario agregamos una funcion para el submit:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"<form onSubmit={handleSubmit} noValidate/>\n\n...\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const datos = {\n      name: nameRef.current.value,\n      email: emailRef.current.value,\n      password: passwordRef.current.value,\n      password_confirmation: passwordConfirmationRef.current.value,\n    }\n    console.log(datos)\n\n    try {\n      const response = await clienteAxios.post('/api/register',datos);\n      console.log(response);\n    } catch (error) {\n      console.log(error.response.data.errors);\n    }\n  }\n")),(0,t.kt)("h3",{id:"mensajes-de-error"},"Mensajes de error"),(0,t.kt)("p",null,"Se recomienda manejar los errores con el state para reflejarlos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},"  const [errores, setErrores] = useState([]);\n")),(0,t.kt)("p",null,"Cuando se manda el post entonces:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},"    try {\n      const response = await clienteAxios.post('/api/register',datos);\n      console.log(response);\n    } catch (error) {\n      setErrores(Object.values(\n        error.response.data.errors\n      ));\n    }\n")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Object.values une todos los valores dentro de un arreglo")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},"    {errores ? errores.map(err=> <p>{err}</p>): null}\n")),(0,t.kt)("h3",{id:"componente-mensaje-error"},"Componente mensaje error"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},'export default function Alerta({children}) {\n  return (\n    <div className="text-center my-2 bg-red-600 text-white font-bold p-3 uppercase border-l-red-400 border-l-8" >\n        {children}\n    </div>\n  )\n}\n')),(0,t.kt)("h2",{id:"token"},"TOKEN"),(0,t.kt)("h3",{id:"crear-un-token-de-usuario"},"Crear un token de usuario"),(0,t.kt)("p",null,"PHP utiliza su propia API de tokens, por lo que al usar el ",(0,t.kt)("inlineCode",{parentName:"p"},"createToken")," se utiliza una tabla llamada ",(0,t.kt)("inlineCode",{parentName:"p"},"personal_access_tokens")," en la base de datos"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"    public function register(RegistroRequest $request){\n        // Validar el registro\n        $data = $request->validated();\n\n        // Crear el usuario\n        $user = User::create([\n            'name' => $data['name'],\n            'email' => $data['email'],\n            'password' => bcrypt($data['password'])\n        ]);\n\n        // Retornar una respuesta\n        return [\n            'token' => $user->createToken('token')->plainTextToken,\n            'user' => $user\n        ];\n    }\n")),(0,t.kt)("h3",{id:"peticion-desde-postmaninsomnia"},"Peticion desde Postman/Insomnia"),(0,t.kt)("p",null,"Desde las rutas dentro de ",(0,t.kt)("inlineCode",{parentName:"p"},"api.php")," existe un endpoint ",(0,t.kt)("inlineCode",{parentName:"p"},"/user")," que se encuentra bajo el middleware de autenticaci\xf3n."),(0,t.kt)("p",null,"Por lo que desde una peticion dentro de insomnia se deben agregar los siguientes headers:"),(0,t.kt)("p",null,(0,t.kt)("img",{src:r(75048).Z,width:"963",height:"354"})),(0,t.kt)("p",null,"Se necesita que el usuario est\xe9 autenticado para hacer peticiones a un endpoint."),(0,t.kt)("p",null,"Si utilizamos el token que regresa al usar el usuario se permite hacer la petici\xf3n:"),(0,t.kt)("p",null,(0,t.kt)("img",{src:r(41676).Z,width:"966",height:"427"})),(0,t.kt)("h2",{id:"login"},"Login"),(0,t.kt)("p",null,"Desde el front se envian los datos de email y password hacia la ruta:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"Route::post('/login',[AuthController::class,'login']);\n")),(0,t.kt)("p",null,"Desde el m\xe9todo login:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"public function login(LoginRequest $request){\n    $data = $request->validated();\n\n    // Verificar credenciales\n    if(!Auth::attempt($data)){\n        return response([\n            'errors' => ['El email o password son incorrectos']\n        ],422);\n    }\n\n    // Autenticar al usuario\n    $user = Auth::user();\n    \n    return [\n        'token' => $user->createToken('token')->plainTextToken,\n        'user' => $user\n    ];\n}\n")),(0,t.kt)("p",null,"Se retorna un token en caso de ser v\xe1lidas las credencias y se almacena en el localStorage del navegador desde el frontend:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},"  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const datos = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value,\n    }\n    //console.log(datos)\n\n    try {\n      const response = await clienteAxios.post('/api/login',datos);\n      localStorage.setItem('AUTH_TOKEN',response.data.token);\n    } catch (error) {\n      setErrores(Object.values(\n        error.response.data.errors\n      ));\n    }\n  }\n")),(0,t.kt)("h2",{id:"useauth"},"useAuth"),(0,t.kt)("p",null,"Mediante un Hook personalizado se puede simplificar la l\xf3gica de la autenticaci\xf3n desde react:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},"// useAuth\n\nimport clienteAxios from \"../config/axios\"\n\nexport const useAuth = ({middleware,url}) => {\n\n    const login = async (datos,setErrores) => { \n        try {\n            const response = await clienteAxios.post('/api/login',datos);\n            localStorage.setItem('AUTH_TOKEN',response.data.token);\n            setErrores([])\n        } catch (error) {\n            setErrores(Object.values(\n              error.response.data.errors\n            ));\n        }\n    }\n\n    const register = () => { }\n\n    const logout = () => { }\n\n    return {\n        login,\n        register,\n        logout\n    }\n}\n")),(0,t.kt)("p",null,"Y para consumirlo desde las vistas correspondientes:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},"\nimport { useAuth } from \"../hooks/useAuth\";\n\n...\n\n  const {login} = useAuth({\n    middleware: 'guest',\n    url: '/'\n  });\n\n...\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const datos = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value,\n    }\n    \n    login(datos, setErrores)\n  }\n\n")))}d.isMDXComponent=!0},75048:(e,n,r)=>{r.d(n,{Z:()=>a});const a=r.p+"assets/images/1-insomnia-13daf118a0015e11a113ad8418651397.png"},41676:(e,n,r)=>{r.d(n,{Z:()=>a});const a=r.p+"assets/images/2-insomnia-fd540576de9610097ad35e1cc50740d5.png"}}]);