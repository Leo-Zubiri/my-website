"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8891],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>E});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),c=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=n,E=p["".concat(i,".").concat(m)]||p[m]||d[m]||o;return r?a.createElement(E,l(l({ref:t},u),{},{components:r})):a.createElement(E,l({ref:t},u))}));function E(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:n,l[1]=s;for(var c=2;c<o;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},54827:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const o={},l="Generales",s={unversionedId:"Postgres/Generales",id:"Postgres/Generales",title:"Generales",description:"Create table",source:"@site/docs/Postgres/5. Generales.md",sourceDirName:"Postgres",slug:"/Postgres/Generales",permalink:"/my-website/docs/Postgres/Generales",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/Postgres/5. Generales.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introducci\xf3n",permalink:"/my-website/docs/Postgres/Introduccion"},next:{title:"Funciones",permalink:"/my-website/docs/Postgres/Funciones"}},i={},c=[{value:"Create table",id:"create-table",level:2},{value:"Constraints (Restricciones)",id:"constraints-restricciones",level:3},{value:"INSERT INTO",id:"insert-into",level:2},{value:"UPDATE",id:"update",level:2},{value:"SELECT",id:"select",level:2},{value:"LIMIT y OFFSET",id:"limit-y-offset",level:3},{value:"WHERE",id:"where",level:3},{value:"DELETE",id:"delete",level:2},{value:"DROP TABLE",id:"drop-table",level:3},{value:"TRUNCATE TABLE",id:"truncate-table",level:3},{value:"Ejercicio",id:"ejercicio",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"generales"},"Generales"),(0,n.kt)("h2",{id:"create-table"},"Create table"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"create table users (\n    name VARCHAR(10) UNIQUE\n);\n")),(0,n.kt)("h3",{id:"constraints-restricciones"},"Constraints (Restricciones)"),(0,n.kt)("p",null,"Las restricciones se utilizan para limitar qu\xe9 tipo de datos se deben almacenar en la base de datos. Asimismo para especificar las reglas para los datos en una tabla. Las restricciones o constraints de SQL aumentan la precisi\xf3n y la confiabilidad de los datos almacenados en la base de datos. Las constraints o restricciones aseguran que no haya violaci\xf3n en t\xe9rminos de transacci\xf3n de los datos."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"La palabra ",(0,n.kt)("strong",{parentName:"p"},"UNIQUE")," utilizada anteriormente, indica que no puede haber valores duplicados en la columna ",(0,n.kt)("strong",{parentName:"p"},"name"),", estos deben ser unicos")),(0,n.kt)("h2",{id:"insert-into"},"INSERT INTO"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Las comillas dobles ",(0,n.kt)("strong",{parentName:"p"},'""'),' se pueden utilizar para indicar el nombre de columnas. Ejemplo: name/"name" ')),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Las comillas simples ",(0,n.kt)("strong",{parentName:"p"},"''")," se utilizan para colocar valores literales o texto")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO\n    users (name)\nVALUES\n    ('Leoziel'),('Hedson'); \n")),(0,n.kt)("p",null,"Si tratamos de insertar nombres que ya se encuentren en la tabla, estar\xedamos chocando con la restricci\xf3n colocada ",(0,n.kt)("strong",{parentName:"p"},"UNIQUE")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},'Query 1: ERROR:  duplicate key value violates unique constraint "users_name_key" DETAIL:  Key (name)=(Leoziel) already exists.')),(0,n.kt)("h2",{id:"update"},"UPDATE"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Para actualizar registros la sintaxis es convencional en SQL")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE users\nSET name='Leo'\nWHERE name='Leoziel2'\n")),(0,n.kt)("h2",{id:"select"},"SELECT"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users\n")),(0,n.kt)("h3",{id:"limit-y-offset"},"LIMIT y OFFSET"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"LIMIT")," determina el m\xe1ximo de registros que una consulta puede retornar")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"OFFSET")," indica a partir de que registro empezar a tomar en cuenta resultados de la consulta")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users\nLIMIT 2\nOFFSET 2\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Lo anterior retorna los dos primeros registros despu\xe9s de los dos primeros")),(0,n.kt)("h3",{id:"where"},"WHERE"),(0,n.kt)("p",null,"Se utiliza para colocar los filtros de los registros que queremos consultar"),(0,n.kt)("h2",{id:"delete"},"DELETE"),(0,n.kt)("p",null,"Para eliminar registros es buena pr\xe1ctica realizar un select para ver la informaci\xf3n que se va a eliminar"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"DELETE from users where name like 'Leo'\n")),(0,n.kt)("h3",{id:"drop-table"},"DROP TABLE"),(0,n.kt)("p",null,"Se utiliza para eliminar completamente una tabla"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"DROP TABLE users\n")),(0,n.kt)("h3",{id:"truncate-table"},"TRUNCATE TABLE"),(0,n.kt)("p",null,"Al utilizar este comando se elimina todo el contenido de la tabla. Solo quita los registros pero no elimina la tabla."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"TRUNCATE TABLE users\n")),(0,n.kt)("h2",{id:"ejercicio"},"Ejercicio"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"-- 1. Ver todos los registros\nSELECT * FROM users\n\n-- 2. Ver el registro cuyo id sea igual a 10\nSELECT * FROM users WHERE id = 10\n\n-- 3. Quiero todos los registros que cuyo primer nombre sea Jim (enga\xf1osa)\nSELECT * FROM users WHERE name LIKE 'Jim %'\n\n-- 4. Todos los registros cuyo segundo nombre es Alexander\nSELECT * FROM users WHERE name LIKE '% Alexander'\n\n-- 5. Cambiar el nombre del registro con id = 1, por tu nombre Ej:'Fernando Herrera'\nUPDATE users \nSET name='Leo Zubiri'\nWHERE id=10\n\n-- 6. Borrar el \xfaltimo registro de la tabla\nDELETE FROM users WHERE id=(SELECT max(id) FROM users)\n")))}d.isMDXComponent=!0}}]);