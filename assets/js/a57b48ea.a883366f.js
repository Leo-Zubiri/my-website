"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4660],{3905:(e,n,a)=>{a.d(n,{Zo:()=>u,kt:()=>f});var r=a(67294);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var s=r.createContext({}),p=function(e){var n=r.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),m=t,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return a?r.createElement(f,l(l({ref:n},u),{},{components:a})):r.createElement(f,l({ref:n},u))}));function f(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:t,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},70342:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=a(87462),t=(a(67294),a(3905));const i={},l="Dart",o={unversionedId:"flutter/dart",id:"flutter/dart",title:"Dart",description:"Dart es un lenguaje de programaci\xf3n moderno y vers\xe1til creado por Google. Se utiliza para construir aplicaciones r\xe1pidas y eficientes para la web, dispositivos m\xf3viles y escritorio.",source:"@site/docs/flutter/01-dart.md",sourceDirName:"flutter",slug:"/flutter/dart",permalink:"/my-website/docs/flutter/dart",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/flutter/01-dart.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Flutter",permalink:"/my-website/docs/flutter/"},next:{title:"Git",permalink:"/my-website/docs/git/"}},s={},p=[{value:"Variables",id:"variables",level:2},{value:"Tipos de Datos",id:"tipos-de-datos",level:3},{value:"MAPS",id:"maps",level:2},{value:"List, Iterable y Sets",id:"list-iterable-y-sets",level:2}],u={toc:p},c="wrapper";function d(e){let{components:n,...a}=e;return(0,t.kt)(c,(0,r.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"dart"},"Dart"),(0,t.kt)("p",null,"Dart es un lenguaje de programaci\xf3n moderno y vers\xe1til creado por Google. Se utiliza para construir aplicaciones r\xe1pidas y eficientes para la web, dispositivos m\xf3viles y escritorio."),(0,t.kt)("p",null,"Flutter: Dart es el lenguaje principal utilizado en Flutter, un popular framework de Google para crear interfaces de usuario atractivas y de alto rendimiento para aplicaciones m\xf3viles y web."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"F\xe1cil de aprender: Su sintaxis es clara y sencilla, similar a otros lenguajes populares como Java o C++."),(0,t.kt)("li",{parentName:"ul"},"Rendimiento: Dart es r\xe1pido. Permite que las aplicaciones funcionen de manera fluida y respondan r\xe1pidamente a las acciones del usuario."),(0,t.kt)("li",{parentName:"ul"},"Flexibilidad: Puedes usar Dart para crear aplicaciones para diferentes plataformas:",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"Web: Aplicaciones que se ejecutan en el navegador."),(0,t.kt)("li",{parentName:"ul"},"M\xf3vil: Aplicaciones para tel\xe9fonos y tablets (Android y iPhone)."),(0,t.kt)("li",{parentName:"ul"},"Escritorio: Aplicaciones para computadoras (Windows, Mac y Linux).")))),(0,t.kt)("h2",{id:"variables"},"Variables"),(0,t.kt)("p",null,"Existen varias formas de declarar variables, es importante conocerlas y saber elegir cuando utilizarlas por que esto define la velocidad dentro de las aplicaciones flutter."),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},(0,t.kt)("strong",{parentName:"p"},"Diferencia entre ",(0,t.kt)("inlineCode",{parentName:"strong"},"const")," y ",(0,t.kt)("inlineCode",{parentName:"strong"},"final")),". Una vez que se declara e inicializa la variable el valor no se puede cambiar, la diferencia es que el valor en ",(0,t.kt)("inlineCode",{parentName:"p"},"const")," es asignado en tiempo de construccion y el de ",(0,t.kt)("inlineCode",{parentName:"p"},"final")," en tiempo de ejecucion")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-dart"},"void main() {\n  \n  // Tipado no estricto\n  var myName = 'Hedson';\n  \n  // Especificar que es tipo String\n  String sname = 'Leonardo';\n  \n  // Una vez establecido el valor no se puede cambiar\n  final fname = 'Zubiri';\n  \n  // Declarar variable final pero asignar valor posteriormente\n  late final lfname;\n  lfname = 'Valdez';\n  \n  // Constante\n  const fullname = 'Leo Zubiri';\n  \n  print('Hola soy $myName $sname $fname $lfname');\n  print(fullname);\n}\n")),(0,t.kt)("h3",{id:"tipos-de-datos"},"Tipos de Datos"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-dart"},"void main(){\n  final String nombre = 'Leo';\n  final int edad = 25;\n  final bool isOpenToWork = true;\n  bool? isBoolean = null; // Variable booleana que es nullable (acepta nulos)\n  \n  // Listado string distintas formas:\n  final mobilestack = ['android studio','flutter'];\n  final projects = <String>['PicNoteAPI','Laratomic Habits'];\n  final List<String> stack2 = <String>['React','Node.js'];\n  \n  // print multi linea\n  print(\"\"\"\n  $nombre\n  $edad\n  $isOpenToWork\n  $isBoolean\n  $mobilestack\n  $projects\n  $stack2\n  \"\"\");\n}\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Dynamic Type")),(0,t.kt)("p",null,"Tratar de evitarlo hasta donde sea posible para tener un mayor control del tipo de datos que se maneja en nuestra aplicacion"),(0,t.kt)("p",null,"El tipo dynamic acepta cualquier tipo de dato y por defecto tiene valor ",(0,t.kt)("inlineCode",{parentName:"p"},"null")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-dart"},'void main() {\n  dynamic errorMessage = \'Hola\';\n  errorMessage = true;\n  errorMessage = [1, 2, 3, 4, 5];\n  errorMessage = {1, 2, 3, 4, 5};\n  errorMessage = null;\n  errorMessage = () => true;\n\n  print("""\n  $errorMessage\n  """);\n}\n')),(0,t.kt)("h2",{id:"maps"},"MAPS"),(0,t.kt)("p",null,"Un mapa equivale a pares de valores, es decir, lo que en otros lenguajes serian los diccionarios."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-dart"},"void main() {\n  \n  final data = {\n    'name': 'Hedson',\n    'age': 25,\n\n  };\n  \n  // Tambien se puede tipar el tipo de dato del mapa\n  final Map<int,dynamic> data2 = {\n    1:'Uno',\n    2:'Dos',\n    3:'Tres',\n    4: {'Edad':25}\n  };  \n  print(\"\"\"\n  $data\n  $data2\n  ${\n    // Acceder a un valor del mapa\n    data['name']\n  }\n  \"\"\");\n}\n")),(0,t.kt)("h2",{id:"list-iterable-y-sets"},"List, Iterable y Sets"),(0,t.kt)("p",null,"Formas comunes de utilizar estas estructuras de datos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-dart"},'void main() {\n  final numbers = [1,2,3,4,5,5,5,6,7,7,7,8,9,10];\n  \n  print(\' Origal list $numbers\');\n  print("""\n    Length: ${numbers.length}\n    Index 0: ${numbers[0]}\n    First: ${numbers.first}\n    Last: ${numbers.last}\n    Reversed: ${numbers.reversed}\n  """);\n  \n  // El reversed transformo el listado en un iterable\n  final iterable_numbers = numbers.reversed;\n  print("""\n    list_to_iterable: ${iterable_numbers}\n    iterable_to_list: ${iterable_numbers.toList()}\n    set: ${iterable_numbers.toSet()}\n  """);\n  \n  final numbersGreaterThan5 = numbers.where((n){\n    return n > 5;\n  });\n  \n  print(\' >5: $numbersGreaterThan5\');\n}\n')))}d.isMDXComponent=!0}}]);