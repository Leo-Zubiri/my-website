"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[707],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>f});var a=r(67294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var l=a.createContext({}),c=function(e){var n=a.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),m=t,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return r?a.createElement(f,i(i({ref:n},p),{},{components:r})):a.createElement(f,i({ref:n},p))}));function f(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:t,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1180:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=r(87462),t=(r(67294),r(3905));const o={},i="Consola Interactiva",s={unversionedId:"nodejs/Consola_Interactiva",id:"nodejs/Consola_Interactiva",title:"Consola Interactiva",description:"Utilizar paquete Colors para mejorar la est\xe9tica de las opciones en consola.",source:"@site/docs/nodejs/2.Consola_Interactiva.md",sourceDirName:"nodejs",slug:"/nodejs/Consola_Interactiva",permalink:"/my-website/docs/nodejs/Consola_Interactiva",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/nodejs/2.Consola_Interactiva.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Bases de Node",permalink:"/my-website/docs/nodejs/Bases"},next:{title:"Express",permalink:"/my-website/docs/nodejs/Express"}},l={},c=[{value:"Leer por consola",id:"leer-por-consola",level:2},{value:"Inquirer",id:"inquirer",level:2},{value:"Modificar <code>package.json</code>",id:"modificar-packagejson",level:3},{value:"Uso",id:"uso",level:3},{value:"Leer por consola y validar",id:"leer-por-consola-y-validar",level:3},{value:"Confirmaci\xf3n",id:"confirmaci\xf3n",level:3},{value:"Selecci\xf3n m\xfaltiple",id:"selecci\xf3n-m\xfaltiple",level:3},{value:"Guardar y Leer archivo",id:"guardar-y-leer-archivo",level:2},{value:"UUID",id:"uuid",level:2},{value:"Objeto to Array",id:"objeto-to-array",level:2},{value:"Eliminar de un objeto",id:"eliminar-de-un-objeto",level:2}],p={toc:c},u="wrapper";function d(e){let{components:n,...r}=e;return(0,t.kt)(u,(0,a.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"consola-interactiva"},"Consola Interactiva"),(0,t.kt)("p",null,"Utilizar paquete Colors para mejorar la est\xe9tica de las opciones en consola."),(0,t.kt)("h2",{id:"leer-por-consola"},"Leer por consola"),(0,t.kt)("p",null,"Utilizar paquete readLine propio de node:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"    const readLine = require('readline').createInterface({\n        input: process.stdin,\n        output: process.stdout\n    })\n\n    readLine.question('Seleccione una opci\xf3n: ', (opc) => {\n        console.log(opc);\n        readLine.close();\n    })\n")),(0,t.kt)("h2",{id:"inquirer"},"Inquirer"),(0,t.kt)("p",null,"Permite crear interfaces de consola con mayores funcionalidades"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"npm install --save inquirer")),(0,t.kt)("h3",{id:"modificar-packagejson"},"Modificar ",(0,t.kt)("inlineCode",{parentName:"h3"},"package.json")),(0,t.kt)("p",null,"La versi\xf3n 9 de inquirer ahora requiere el uso de m\xf3dulos de ECMAScript. "),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},'Se agrega el "type": "module"')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "todolist-nodeconsola",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "type": "module",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "keywords": [],\n  "author": "",\n  "license": "ISC",\n  "dependencies": {\n    "colors": "^1.4.0",\n    "inquirer": "^9.1.5"\n  }\n}\n\n')),(0,t.kt)("p",null,"Se cambian require por imports y se cambia la forma de exportar:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"import inquirer from 'inquirer';\n \nimport colors from 'colors';\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const miFuncion = () => {}\n\nexport {\n    miFuncion\n};\n")),(0,t.kt)("h3",{id:"uso"},"Uso"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="App.js"',title:'"App.js"'},"\nimport colors from 'colors';\nimport { inquirerMenu, pausa} from './helpers/inquirer.js'\n\nconsole.clear();\n\nconst main = async() => {\n    let opc = '';\n    do {\n        opc = await inquirerMenu();\n        console.log(opc);\n        if(opc !== '0') await pausa();\n    } while (opc !== '0');\n\n}\n\nmain();\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="inquirer.js"',title:'"inquirer.js"'},"import inquirer from 'inquirer';\nimport colors from 'colors';\n\nconst preguntas = [\n    {\n        type: 'list',\n        name: 'opcion',\n        message: 'Que desea hacer?',\n        choices: [\n            {\n                value: '1',\n                name: '1. Crear Tarea'\n            },\n            {\n                value: '2',\n                name: '2. Listar Tareas'\n            },\n        ]\n    }\n]\n\nconst inquirerMenu = async() => {\n    console.clear();\n    console.log(\"=======================================\".white);\n    console.log(\"              TO-DO LIST              \".blue);\n    console.log(\"         Seleccione una opci\xf3n        \".green);\n    console.log(\"=======================================\\n\".white);\n\n    const opt = await inquirer.prompt(preguntas)\n    const {opcion} = opt;\n    return opcion;\n}\n\nconst pausa = async() => {\n    console.log('\\n')\n    await inquirer.prompt({\n        type: 'input',\n        name: 'continuar',\n        message: `Presione ${'ENTER'.green} para continuar...\\n`,\n    })\n}\n\nexport {\n    inquirerMenu,\n    pausa\n}\n")),(0,t.kt)("h3",{id:"leer-por-consola-y-validar"},"Leer por consola y validar"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const leerInput = async(mensaje) => {\n    const question = [\n        {\n            type: 'input',\n            name: 'desc',\n            message: mensaje,\n            validate(value){\n                if(value.length === 0){\n                    return 'Por favor ingrese un valor';\n                }\n                return true\n            }\n        }\n    ]\n\n    const {desc} = await inquirer.prompt(question);\n    return desc;\n}\n")),(0,t.kt)("h3",{id:"confirmaci\xf3n"},"Confirmaci\xf3n"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const confirmar = async (message) => {\n    const question = [\n        {\n            type: 'confirm',\n            name: 'confirmed',\n            message\n        }\n    ]\n\n    const {confirmed} = await inquirer.prompt(question);\n\n    return confirmed;\n}\n")),(0,t.kt)("h3",{id:"selecci\xf3n-m\xfaltiple"},"Selecci\xf3n m\xfaltiple"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const listadoCheckList = async (tareas=[]) => { \n    const choices = tareas.map((tarea,i) => {\n\n        return {\n            value: tarea.id,\n            name: `${i+1}. ${tarea.desc}`,\n            checked: tarea.completadoEn ? true:false\n        }\n    })\n\n    const preguntas = [\n        {\n            type: 'checkbox',\n            name: 'ids',\n            message: 'Seleccion: ',\n            choices\n        }\n    ]\n    const {ids} = await inquirer.prompt(preguntas)\n    return ids;\n    // Retorna arreglo\n}\n")),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"guardar-y-leer-archivo"},"Guardar y Leer archivo"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"import fs from 'fs';\n\n// Crear archivo\nfs.writeFileSync(archivo,JSON.stringify(data))\n\n// Leer archivo\nif(!fs.existsSync(archivo)) return null;\nconst info = fs.readFileSync(archivo, {encoding: 'utf-8'})\nconst data = JSON.parse(info);\n")),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"uuid"},"UUID"),(0,t.kt)("p",null,"Paquete para crear identificadores \xfanicos a nivel mundial."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"npm i uuid")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Crear ID"',title:'"Crear','ID"':!0},"import { v4 as uuidv4 } from 'uuid';\nid = uuidv4();\n")),(0,t.kt)("h2",{id:"objeto-to-array"},"Objeto to Array"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"get ListadoArr(){\n    const listado = [];\n    Object.keys(this._listado).forEach(key => {\n        const tarea = this._listado[key]\n        listado.push(tarea)\n    })\n\n    return listado;\n}\n")),(0,t.kt)("h2",{id:"eliminar-de-un-objeto"},"Eliminar de un objeto"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"borrarTarea(id=''){\n    if(this._listado[id]){\n        delete this._listado[id];\n    }\n}\n")))}d.isMDXComponent=!0}}]);