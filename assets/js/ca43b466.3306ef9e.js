"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4673],{3905:(e,a,r)=>{r.d(a,{Zo:()=>p,kt:()=>g});var t=r(7294);function l(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function n(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?n(Object(r),!0).forEach((function(a){l(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function s(e,a){if(null==e)return{};var r,t,l=function(e,a){if(null==e)return{};var r,t,l={},n=Object.keys(e);for(t=0;t<n.length;t++)r=n[t],a.indexOf(r)>=0||(l[r]=e[r]);return l}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)r=n[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=t.createContext({}),u=function(e){var a=t.useContext(i),r=a;return e&&(r="function"==typeof e?e(a):o(o({},a),e)),r},p=function(e){var a=u(e.components);return t.createElement(i.Provider,{value:a},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var r=e.components,l=e.mdxType,n=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(r),m=l,g=c["".concat(i,".").concat(m)]||c[m]||d[m]||n;return r?t.createElement(g,o(o({ref:a},p),{},{components:r})):t.createElement(g,o({ref:a},p))}));function g(e,a){var r=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var n=r.length,o=new Array(n);o[0]=m;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s[c]="string"==typeof e?e:l,o[1]=s;for(var u=2;u<n;u++)o[u]=r[u];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5492:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>u});var t=r(7462),l=(r(7294),r(3905));const n={},o="GITHUB",s={unversionedId:"git/06 github",id:"git/06 github",title:"GITHUB",description:"Es una plataforma para mantener repositorios git con c\xf3digo fuente en la nube.",source:"@site/docs/git/06 github.md",sourceDirName:"git",slug:"/git/06 github",permalink:"/my-website/docs/git/06 github",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/git/06 github.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Rebase",permalink:"/my-website/docs/git/05 rebase"},next:{title:"Github Issues",permalink:"/my-website/docs/git/07 issues"}},i={},u=[{value:"GIT REMOTE",id:"git-remote",level:2},{value:"PULL",id:"pull",level:3},{value:"PULLING STRATEGY",id:"pulling-strategy",level:4},{value:"GIT PUSH",id:"git-push",level:2},{value:"GITHUB TAGS",id:"github-tags",level:2},{value:"RELEASE TAGS",id:"release-tags",level:3},{value:"GIT FETCH",id:"git-fetch",level:2},{value:"FLUJOS DE TRABAJO",id:"flujos-de-trabajo",level:2},{value:"GITHUB FORK",id:"github-fork",level:2},{value:"SE NECESITA APROBACION PARA INTEGRAR CAMBIOS",id:"se-necesita-aprobacion-para-integrar-cambios",level:3},{value:"UPSTREAM",id:"upstream",level:4},{value:"PULL REQUEST",id:"pull-request",level:4},{value:"RAMAS EN GITHUB",id:"ramas-en-github",level:2},{value:"PULL --ALL",id:"pull---all",level:3},{value:"PRUNE",id:"prune",level:3},{value:"RECUPERAR RAMA DE PRODUCCION",id:"recuperar-rama-de-produccion",level:3}],p={toc:u},c="wrapper";function d(e){let{components:a,...n}=e;return(0,l.kt)(c,(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"github"},"GITHUB"),(0,l.kt)("p",null,"Es una plataforma para mantener repositorios git con c\xf3digo fuente en la nube."),(0,l.kt)("p",null,"Lo anterior permite que tengamos una copia local del historial de cambios y que estos sean integrados posteriormente con la copia principal en la nube a trav\xe9s de un PUSH de cambios."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"PUSH:"),"  Es el proceso de enviar los cambios realizados a un repositorio remoto"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"PULL:"),"  Es el proceso de descargar o actualizar los archivos del proyecto desde un repositorio remoto (bajar cambios)")),(0,l.kt)("h2",{id:"git-remote"},"GIT REMOTE"),(0,l.kt)("p",null,"Permite interactuar con los repositorios remotos. Al utilizar github y crear un repositorio en la plataforma, se muestran opciones para enlazar el repostitorio local con uno remoto (plataforma de git)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Ver los remotos configurados")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git remote -v\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Agregar un remoto"),"\nLa direcci\xf3n/url"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git remote add https:/github.com/usuario/repositorio.git\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"PUSH al remote")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git push -u origin master\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Lo anterior indica  que se va a subir todo lo que hay en la rama ",(0,l.kt)("inlineCode",{parentName:"p"},"master")," al repositorio en github. Se utilizan las credenciales de github para que los cambios sean aplicados.")),(0,l.kt)("h3",{id:"pull"},"PULL"),(0,l.kt)("p",null,"Se utiliza para traer los cambios mas recientes del origin configurado con el ",(0,l.kt)("inlineCode",{parentName:"p"},"remote"),". Es decir, que la versi\xf3n de la rama sea la m\xe1s actualizada seg\xfan la que se encuentra en github"),(0,l.kt)("p",null,"Pull por defecto al origen configurado:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git pull\n")),(0,l.kt)("p",null,"Se puede especificar la rama:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git pull origin main\n")),(0,l.kt)("h4",{id:"pulling-strategy"},"PULLING STRATEGY"),(0,l.kt)("p",null,"Existen estrategias distintas a la hora de unir los cambios del remoto con el local a trav\xe9s de un PULL, esto se le conoce como ",(0,l.kt)("strong",{parentName:"p"},"PULLING WITHOUT RECONCILE STRATEGY"),"."),(0,l.kt)("p",null,"Entre las estrategias para el pull:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"pull.rebase false - MERGE"),(0,l.kt)("li",{parentName:"ul"},"pull.rebase true - rebase"),(0,l.kt)("li",{parentName:"ul"},"pull.ff only - fast-forward only")),(0,l.kt)("p",null,"Es muy com\xfan utilizar la estrategia del fast-forward, en caso contrario existir\xe1n conflictos que resolver"),(0,l.kt)("p",null,"Para establecer la estrategia del pulling en la configuraci\xf3n global:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git config --global pull.ff only\n")),(0,l.kt)("p",null,"En caso de querer ver el archivo de la configuraci\xf3n"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git config --global -e\n")),(0,l.kt)("h2",{id:"git-push"},"GIT PUSH"),(0,l.kt)("p",null,"Una vez que se terminen los cambios locales para actualizar el repositorio remoto se utiliza el ",(0,l.kt)("strong",{parentName:"p"},"push")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git push\n")),(0,l.kt)("p",null,"Existe la posibilidad de que lleguen a haber conflictos si hay cambios en el origin que choquen con los locales. Si colocamos la estrategia del pull solo para fast-forward no podr\xedamos actualizar la rama con solo ",(0,l.kt)("strong",{parentName:"p"},"git pull")),(0,l.kt)("p",null,"Para que exista la posibilidad de atender los conflictos se puede configurar la estrategia del pull solo para el local"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git config pull.rebase true\ngit pull\n")),(0,l.kt)("h2",{id:"github-tags"},"GITHUB TAGS"),(0,l.kt)("p",null,"Por defecto las tags agregadas en el repositorio de forma local, no se suben automaticamente a GitHub. Para que se env\xeden a GitHub es necesario actualizarlas cada cierto tiempo de ser necesario con:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git push --tags\n")),(0,l.kt)("p",null,(0,l.kt)("img",{src:r(1680).Z,width:"651",height:"209"})),(0,l.kt)("p",null,"Se puede descargar el c\xf3digo como se encuentra en cada tag (versi\xf3n)"),(0,l.kt)("p",null,(0,l.kt)("img",{src:r(7764).Z,width:"728",height:"721"})),(0,l.kt)("h3",{id:"release-tags"},"RELEASE TAGS"),(0,l.kt)("p",null,"Desde la secci\xf3n de tags se selecciona uno que represente una versi\xf3n de lanzamiento o pre-lanzamiento. En la informaci\xf3n del tag se puede pulsar en editar"),(0,l.kt)("p",null,"En la edici\xf3n se puede describir la versi\xf3n as\xed como agregar otra clase de recursos que se quieran asociar a la descarga de ese release."),(0,l.kt)("p",null,"Una vez configurado la secci\xf3n de releases del repositorio lo contendr\xe1"),(0,l.kt)("p",null,(0,l.kt)("img",{src:r(3337).Z,width:"916",height:"479"})),(0,l.kt)("h2",{id:"git-fetch"},"GIT FETCH"),(0,l.kt)("p",null,"Sirve para actualizar las referencias en base al repositorio remoto sin la necesidad de bajar los cambios mas actuales y crear un merge o rebase"),(0,l.kt)("p",null,"Es decir, se puede hacer primero un ",(0,l.kt)("inlineCode",{parentName:"p"},"fetch")," para ver si hay actualizaciones en el remoto y posteriormente hacer el ",(0,l.kt)("inlineCode",{parentName:"p"},"pull")," de los cambios"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git fetch\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git pull\n")),(0,l.kt)("h2",{id:"flujos-de-trabajo"},"FLUJOS DE TRABAJO"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"En base a forks. Nos permite que cada cambio que se quiera integrar al repositorio principal tenga que ser revisado y aprobado. Esto puede ser tedioso de implementar cuando se trabaja con muchos desarrolladores"),(0,l.kt)("li",{parentName:"ul"},"En base a ramas. Cada desarrollador puede crear su propia rama, esta se conoce como ",(0,l.kt)("strong",{parentName:"li"},"feature branch"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git fetch\ngit branch -a\ngit checkout nombre-rama\n"))),(0,l.kt)("li",{parentName:"ul"},"Trabajar con ramas y hacer pull request. Se puede trabajar mediante ramas y una vez se actualic\xe9 la feature-branch desde github se puede hacer un pull request para que el equipo de trabajo revise los cambios antes de ser integrados.")),(0,l.kt)("h2",{id:"github-fork"},"GITHUB FORK"),(0,l.kt)("p",null,"Git clone es para clonar un repositorio publico a tu repositorio local (Es como descargar el proyecto en tu computadora)"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GIT FORK")," es para darle seguimiento al proyecto, es decir Haciendo un fork puedes contribuir a un repositorio que no es tuyo mediante pull requests, internamente un fork hace una copia exacta del repositorio original en tu cuenta github (con una url diferente a la del fork) y luego puedes usar clone para llevarlo a tu repositorio local, as\xed tu trabajas en una copia exacta del proyecto original y ya en tu repositorio podr\xe1s hacerle los cambios que quieras sin afectar el repositorio original.\nUsualmente Fork se usa en proyectos Open Source. Donde no se le puede dar acceso a todo el mundo, pero si alguien quiere contribuir lo puede hacer de esta manera."),(0,l.kt)("h3",{id:"se-necesita-aprobacion-para-integrar-cambios"},"SE NECESITA APROBACION PARA INTEGRAR CAMBIOS"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Con el fork se necesita hacer un pull request para que los cambios sean integrados en el origen (repositorio base de donde se realiz\xf3 el fork)")),(0,l.kt)("p",null,"Se puede hacer un fork del repositorio remoto principal(convencionalmente llamado ",(0,l.kt)("strong",{parentName:"p"},"upstream")," u ",(0,l.kt)("strong",{parentName:"p"},"origin"),"), esto crear\xe1 una copia en el github personal, posteriormente lo clonamos de forma local y se empiezan a crear commits para afectar la versi\xf3n clonada"),(0,l.kt)("p",null,"Si se requiere bajar los cambios pero del ",(0,l.kt)("strong",{parentName:"p"},"upstream")," para actualizar nuestro fork, se debe agregar la referencia."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git remote -v\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"}," Con lo anterior se visualiza de que remoto se hace el ",(0,l.kt)("strong",{parentName:"p"},"fetch")," y en cual un ",(0,l.kt)("strong",{parentName:"p"},"push"))),(0,l.kt)("h4",{id:"upstream"},"UPSTREAM"),(0,l.kt)("p",null,"Si se va a agregar un remoto del cual solo bajaremos informaci\xf3n usualmente se le conoce como ",(0,l.kt)("strong",{parentName:"p"},"upstream")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git remote add upstream [url/path del remoto]\n")),(0,l.kt)("p",null,"Ahora se pueden bajar cambios de nuestro fork remoto"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git pull\n")),(0,l.kt)("p",null,"Y bajar los \xfaltimos cambios en el upstream"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git pull upstream master\n")),(0,l.kt)("h4",{id:"pull-request"},"PULL REQUEST"),(0,l.kt)("p",null,"Una vez hemos realizado commits se pueden llevar los cambios mediante un pull request ya que se trabaj\xf3 sobre un fork y no sobre el repositorio origen"),(0,l.kt)("p",null,"Es decir, no se pueden subir los cambios directamente al upstream al menos que sean aprobados para integrarse"),(0,l.kt)("p",null,"Github proporciona la opci\xf3n de pull request desde su interfaz en el repositorio fork, y sabe la relaci\xf3n que tiene con el origen para crear una solicitud y que nuestros cambios sean integrados una vez aceptados."),(0,l.kt)("h2",{id:"ramas-en-github"},"RAMAS EN GITHUB"),(0,l.kt)("p",null,"Desde nuestra copia local se puede crear una rama y trabajar sobre esta. Si intentamos subir los cambios con ",(0,l.kt)("inlineCode",{parentName:"p"},"git push")," ocurrir\xe1 un error, la rama no existe en el remoto y por lo tanto no puede actualizarla. Git te da la soluci\xf3n"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git push --set-upstream origin nombre-rama\n")),(0,l.kt)("p",null,"Despues desde github se puede solicitar el pull request de la rama-feature al main del remoto principal, y si los cambios son integrados se puede eliminar la rama desde github de ser necesario"),(0,l.kt)("p",null,"Desde la copia local del fork tambien se puede eliminar la rama"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git branch -d nombre-rama\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Si hay cambios no aplicados y se intenta eliminar la rama ocurrir\xe1 un error, para forzar la eliminaci\xf3n de la rama se agrega ",(0,l.kt)("inlineCode",{parentName:"p"},"-f")," para forzar")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Para eliminar una rama remota desde el local")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git push origin --delete nombre-rama\n")),(0,l.kt)("h3",{id:"pull---all"},"PULL --ALL"),(0,l.kt)("p",null,"Puede darse el caso de que nuestro equipo de trabajo este trabajando en ramas y subiendo actualizaciones de estas al remoto principal. Puede haber casos donde un ",(0,l.kt)("strong",{parentName:"p"},"pull")," solo se dedique a traer cambios de la rama en la que se est\xe1 trabajando. Si se requiere estar actualizando la copia local junto con todas las ramas del remoto principal:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git pull --all\n")),(0,l.kt)("h3",{id:"prune"},"PRUNE"),(0,l.kt)("p",null,"Si borramos ramas en el origin se debe actualizar ese status en local, por lo que se podaran las referencias de las ramas en el local"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git remote prune origin\n")),(0,l.kt)("h3",{id:"recuperar-rama-de-produccion"},"RECUPERAR RAMA DE PRODUCCION"),(0,l.kt)("p",null,"Es recomendable utilizar tags para las distintas versiones que se lanzan a producci\xf3n. Si se diera el caso de que se eliminan las ramas donde se trabajaron dichas versiones tanto en el remoto como en el local, existe la posibilidad de recuperar la aplicaci\xf3n en esos estados.\nTal vez se necesita seguir dando mantenimiento a una versi\xf3n en espec\xedfico o solicitan el c\xf3digo en determinado momento del tiempo"),(0,l.kt)("p",null,"Para ver las versiones mediante los tags:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git tag\n")),(0,l.kt)("p",null,"Entrar a la versi\xf3n que se requiera"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout v1.0.0\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Lo anterior nos posicionar\xe1 en esa versi\xf3n, pero no estaremos sobre una rama, para crear una rama con esa versi\xf3n:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout -b rama-recuperada     \n")))}d.isMDXComponent=!0},3337:(e,a,r)=>{r.d(a,{Z:()=>t});const t=r.p+"assets/images/github-releases-77c2516fe9dee4405a35a404ce11f930.png"},1680:(e,a,r)=>{r.d(a,{Z:()=>t});const t=r.p+"assets/images/github-repo-opt-2599d704e1aff50820f7d8109e51dbe2.png"},7764:(e,a,r)=>{r.d(a,{Z:()=>t});const t=r.p+"assets/images/github-tags-9f989d78f1ffe1b6d97f5c60d5100dbb.png"}}]);