"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5875],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(g,o(o({ref:n},p),{},{components:t})):r.createElement(g,o({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7110:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={},o=void 0,s={unversionedId:"laravel/devstagram/Notes/Sessions",id:"laravel/devstagram/Notes/Sessions",title:"Sessions",description:"Sessions",source:"@site/docs/laravel/1-devstagram/Notes/Sessions.md",sourceDirName:"laravel/1-devstagram/Notes",slug:"/laravel/devstagram/Notes/Sessions",permalink:"/docs/laravel/devstagram/Notes/Sessions",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/laravel/1-devstagram/Notes/Sessions.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Routing",permalink:"/docs/laravel/devstagram/Notes/Routing"},next:{title:"Method Spoofing",permalink:"/docs/laravel/devstagram/Notes/Spoofing"}},l={},c=[{value:"Sessions",id:"sessions",level:2},{value:"Iniciar Sesi\xf3n",id:"iniciar-sesi\xf3n",level:3},{value:"Verificar inicio de sesi\xf3n",id:"verificar-inicio-de-sesi\xf3n",level:3},{value:"Cerrar sesi\xf3n",id:"cerrar-sesi\xf3n",level:3},{value:"Mantener Sesion Iniciada",id:"mantener-sesion-iniciada",level:3}],p={toc:c},u="wrapper";function d(e){let{components:n,...i}=e;return(0,a.kt)(u,(0,r.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"sessions"},"Sessions"),(0,a.kt)("h3",{id:"iniciar-sesi\xf3n"},"Iniciar Sesi\xf3n"),(0,a.kt)("p",null,"Para iniciar sesi\xf3n por convenci\xf3n se utiliza un formulario para el login"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"<form method='POST' action=\"{{route('login')}}\" novalidate>\n")),(0,a.kt)("p",null,"La ruta a la que apunta:\n",(0,a.kt)("inlineCode",{parentName:"p"},"Route::post('/login',[LoginController::class,'store']);")),(0,a.kt)("p",null,"El m\xe9todo store que confirma las credenciales:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"    $this->validate($request,[\n        'email' => 'required|email',\n        'password' => 'required'\n    ]);\n\n    if(!auth()->attempt($request->only('email','password'))){\n        return back()->with('mensaje','Credenciales incorrectas');\n    }\n\n    return redirect()->route('posts.index');\n")),(0,a.kt)("p",null,"El retorno de error de credenciales se captura desde el formulario:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"@if (session('mensaje'))\n    <p> {{ session('mensaje') }} </p>\n@endif\n")),(0,a.kt)("h3",{id:"verificar-inicio-de-sesi\xf3n"},"Verificar inicio de sesi\xf3n"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Con directiva if")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"    @if (auth()->user())\n        <p>Autenticado</p>\n    @else\n        <p>No autenticado</p>\n    @endif\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Con directiva auth")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"\n    @auth\n        <p>Autenticado</p>\n    @endauth\n\n    @guest\n        <p>No autenticado</p>\n    @endguest\n")),(0,a.kt)("h3",{id:"cerrar-sesi\xf3n"},"Cerrar sesi\xf3n"),(0,a.kt)("p",null,"Forma insegura:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"    auth()->logout();\n    return redirect()->route('login');\n")),(0,a.kt)("p",null,"Forma segura para evitar ataques:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"// La ruta debe ser POST para cerrar sesion, se utiliza como formulario\n\n<form method='POST' action=\"{{route('logout')}}\"> \n    @csrf\n    <button type=\"submit\">\n    Cerrar Sesion\n    </button>\n</form>\n\n")),(0,a.kt)("h3",{id:"mantener-sesion-iniciada"},"Mantener Sesion Iniciada"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},'// Desde el formulario\n<div class="mb-5 ">\n    <input type="checkbox" name="remember">\n    <label>\n        Mantener mi sesi\xf3n abierta\n    </label>\n</div>\n// Se agrega un nuevo parametro\nauth()->attempt($request->only(\'email\',\'password\'),$request->remember)\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Lo anterior mantiene la sesion iniciada con token en la base de datos y es guardado desde las cookies del navegador")),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(1135).Z,width:"701",height:"168"})),(0,a.kt)("hr",null))}d.isMDXComponent=!0},1135:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/6.1-779955d8e32138db60fc8a2be0254aef.png"}}]);