"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[707],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>f});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),l=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),d=o,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||a;return r?t.createElement(f,i(i({ref:n},p),{},{components:r})):t.createElement(f,i({ref:n},p))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1180:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var t=r(7462),o=(r(7294),r(3905));const a={},i="Consola Interactiva",s={unversionedId:"nodejs/Consola_Interactiva",id:"nodejs/Consola_Interactiva",title:"Consola Interactiva",description:"Utilizar paquete Colors para mejorar la est\xe9tica de las opciones en consola.",source:"@site/docs/nodejs/2.Consola_Interactiva.md",sourceDirName:"nodejs",slug:"/nodejs/Consola_Interactiva",permalink:"/my-website/docs/nodejs/Consola_Interactiva",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/nodejs/2.Consola_Interactiva.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Bases de Node",permalink:"/my-website/docs/nodejs/Bases"},next:{title:"React",permalink:"/my-website/docs/react/"}},c={},l=[{value:"Leer por consola",id:"leer-por-consola",level:2},{value:"Inquirer",id:"inquirer",level:2},{value:"Modificar <code>package.json</code>",id:"modificar-packagejson",level:3},{value:"Uso",id:"uso",level:3}],p={toc:l},u="wrapper";function m(e){let{components:n,...r}=e;return(0,o.kt)(u,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"consola-interactiva"},"Consola Interactiva"),(0,o.kt)("p",null,"Utilizar paquete Colors para mejorar la est\xe9tica de las opciones en consola."),(0,o.kt)("h2",{id:"leer-por-consola"},"Leer por consola"),(0,o.kt)("p",null,"Utilizar paquete readLine propio de node:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"    const readLine = require('readline').createInterface({\n        input: process.stdin,\n        output: process.stdout\n    })\n\n    readLine.question('Seleccione una opci\xf3n: ', (opc) => {\n        console.log(opc);\n        readLine.close();\n    })\n")),(0,o.kt)("h2",{id:"inquirer"},"Inquirer"),(0,o.kt)("p",null,"Permite crear interfaces de consola con mayores funcionalidades"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm install --save inquirer")),(0,o.kt)("h3",{id:"modificar-packagejson"},"Modificar ",(0,o.kt)("inlineCode",{parentName:"h3"},"package.json")),(0,o.kt)("p",null,"La versi\xf3n 9 de inquirer ahora requiere el uso de m\xf3dulos de ECMAScript. "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},'Se agrega el "type": "module"')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "todolist-nodeconsola",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "type": "module",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "keywords": [],\n  "author": "",\n  "license": "ISC",\n  "dependencies": {\n    "colors": "^1.4.0",\n    "inquirer": "^9.1.5"\n  }\n}\n\n')),(0,o.kt)("p",null,"Se cambian require por imports y se cambia la forma de exportar:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import inquirer from 'inquirer';\n \nimport colors from 'colors';\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const miFuncion = () => {}\n\nexport {\n    miFuncion\n};\n")),(0,o.kt)("h3",{id:"uso"},"Uso"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="App.js"',title:'"App.js"'},"\nimport colors from 'colors';\nimport { inquirerMenu, pausa} from './helpers/inquirer.js'\n\nconsole.clear();\n\nconst main = async() => {\n    let opc = '';\n    do {\n        opc = await inquirerMenu();\n        console.log(opc);\n        if(opc !== '0') await pausa();\n    } while (opc !== '0');\n\n}\n\nmain();\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="inquirer.js"',title:'"inquirer.js"'},"import inquirer from 'inquirer';\nimport colors from 'colors';\n\nconst preguntas = [\n    {\n        type: 'list',\n        name: 'opcion',\n        message: 'Que desea hacer?',\n        choices: [\n            {\n                value: '1',\n                name: '1. Crear Tarea'\n            },\n            {\n                value: '2',\n                name: '2. Listar Tareas'\n            },\n        ]\n    }\n]\n\nconst inquirerMenu = async() => {\n    console.clear();\n    console.log(\"=======================================\".white);\n    console.log(\"              TO-DO LIST              \".blue);\n    console.log(\"         Seleccione una opci\xf3n        \".green);\n    console.log(\"=======================================\\n\".white);\n\n    const opt = await inquirer.prompt(preguntas)\n    const {opcion} = opt;\n    return opcion;\n}\n\nconst pausa = async() => {\n    console.log('\\n')\n    await inquirer.prompt({\n        type: 'input',\n        name: 'continuar',\n        message: `Presione ${'ENTER'.green} para continuar...\\n`,\n    })\n}\n\nexport {\n    inquirerMenu,\n    pausa\n}\n")))}m.isMDXComponent=!0}}]);