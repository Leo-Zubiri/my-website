"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[299],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>g});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=n.createContext({}),u=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},p=function(e){var a=u(e.components);return n.createElement(i.Provider,{value:a},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(t),m=r,g=c["".concat(i,".").concat(m)]||c[m]||d[m]||o;return t?n.createElement(g,l(l({ref:a},p),{},{components:t})):n.createElement(g,l({ref:a},p))}));function g(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=m;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s[c]="string"==typeof e?e:r,l[1]=s;for(var u=2;u<o;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4987:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=t(7462),r=(t(7294),t(3905));const o={},l=void 0,s={unversionedId:"laravel/devstagram/Notes/MVC",id:"laravel/devstagram/Notes/MVC",title:"MVC",description:"MVC - MODEL VIEW CONTROLLER",source:"@site/docs/laravel/1-devstagram/Notes/MVC.md",sourceDirName:"laravel/1-devstagram/Notes",slug:"/laravel/devstagram/Notes/MVC",permalink:"/my-website/docs/laravel/devstagram/Notes/MVC",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/laravel/1-devstagram/Notes/MVC.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Livewire",permalink:"/my-website/docs/laravel/devstagram/Notes/Livewire"},next:{title:"**Migraciones**",permalink:"/my-website/docs/laravel/devstagram/Notes/Migraciones"}},i={},u=[{value:"<strong>MVC - MODEL VIEW CONTROLLER</strong>",id:"mvc---model-view-controller",level:2},{value:"Comando MVC",id:"comando-mvc",level:2},{value:"<strong>En database/migrations:</strong>",id:"en-databasemigrations",level:3},{value:"<strong>En database/factories:</strong>",id:"en-databasefactories",level:3},{value:"<strong>En database/seeders</strong>",id:"en-databaseseeders",level:3},{value:"<strong>En routes/api.php</strong>",id:"en-routesapiphp",level:3},{value:"<strong>Configurar Servicio API</strong>",id:"configurar-servicio-api",level:2},{value:"<strong>PUT</strong>",id:"put",level:3},{value:"<strong>DELETE</strong>",id:"delete",level:3}],p={toc:u},c="wrapper";function d(e){let{components:a,...t}=e;return(0,r.kt)(c,(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"mvc---model-view-controller"},(0,r.kt)("strong",{parentName:"h2"},"MVC - MODEL VIEW CONTROLLER")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Modelo")," - Es el encargado con todas las interacciones en la base de datos."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Vista")," - Se encarga de todo lo que se ve en pantalla."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Controlador")," - Comunica modelo y vista. "),(0,r.kt)("h2",{id:"comando-mvc"},"Comando MVC"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Con el siguiente comando se crea toda una entidad, se le asocia una vista y un controlador. ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"// -c controller\n// -m migration file\n// -f factory (seeding)\n// --api  \n\nphp artisan make:model Modelo -c -m -f --api\n")),(0,r.kt)("p",null,"El comando anterior crea archivos en:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"database/factories"),(0,r.kt)("li",{parentName:"ol"},"database/migrations"),(0,r.kt)("li",{parentName:"ol"},"app/Models"),(0,r.kt)("li",{parentName:"ol"},"app/Http/Controllers")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"en-databasemigrations"},(0,r.kt)("strong",{parentName:"h3"},"En database/migrations:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"Schema::create('Users', function (Blueprint $table) {\n   $table->id();\n   $table->string('nombre');\n   $table->integer('edad')->unique()->nullable();\n   //$table->longText('edad');\n   $table->timestamps();\n});\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"php artisan migrate")),(0,r.kt)("blockquote",null,(0,r.kt)("h2",{parentName:"blockquote",id:"lo-anterior-crea-la-tabla-en-la-bdd-seg\xfan-el-esquema-indicado"},"Lo anterior crea la tabla en la bdd seg\xfan el esquema indicado")),(0,r.kt)("h3",{id:"en-databasefactories"},(0,r.kt)("strong",{parentName:"h3"},"En database/factories:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"public function definition()\n{\n  return [\n      'nombre' => fake()->name(),\n      'edad' => fake()->numberBetween(18,99),\n  ];\n}\n")),(0,r.kt)("blockquote",null,(0,r.kt)("h2",{parentName:"blockquote",id:"lo-anterior-indica-los-datos-generados-aleatorios-que-servir\xe1n-para-sembrarse-en-la-bdd"},"Lo anterior indica los datos generados aleatorios que servir\xe1n para sembrarse en la bdd.")),(0,r.kt)("h3",{id:"en-databaseseeders"},(0,r.kt)("strong",{parentName:"h3"},"En database/seeders")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"public function run()\n {\n     \\App\\Models\\Users::factory(10)->create();\n\n     // \\App\\Models\\User::factory()->create([\n     //     'name' => 'Test User',\n     //     'email' => 'test@example.com',\n     // ]);\n }\n")),(0,r.kt)("p",null,"Elimina tablas y vuelve a crear con datos aleatorios:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"php artisan migrate:fresh --seed")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Lo anterior crea la tabla y la cantidad de registros que se desean sembrar en la base de datos")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"en-routesapiphp"},(0,r.kt)("strong",{parentName:"h3"},"En routes/api.php")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Debe apuntar al controller respectivo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"Route::apiResource('users','App\\Http\\Controllers\\UsuarioController');\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Si se desea poner rutas manualmente:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"Route::get('users','App\\Http\\Controllers\\UsuarioController@metodo');\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Para ver rutas:"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"php artisan r:l")),(0,r.kt)("blockquote",null,(0,r.kt)("h2",{parentName:"blockquote",id:"lo-anterior-configura-la-ruta-para-que-apunte-a-un-controlador-con-funcionalidad-de-api-ejemplo-localhost3000usuario-puede-apuntar-a-un-usuariocontroller"},"Lo anterior configura la ruta para que apunte a un controlador con funcionalidad de API. Ejemplo ",(0,r.kt)("strong",{parentName:"h2"},"localhost:3000/usuario")," puede apuntar a un UsuarioController")),(0,r.kt)("h2",{id:"configurar-servicio-api"},(0,r.kt)("strong",{parentName:"h2"},"Configurar Servicio API")),(0,r.kt)("p",null,"El comando para MVC crea un controlador para el modelo en la ruta de ",(0,r.kt)("strong",{parentName:"p"},"app/Http/Controllers"),"."),(0,r.kt)("p",null,"Se debe configurar los m\xe9todos en el Controller para darle la funcionalidad de API."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"GET")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"//Retornar todos los registros\npublic function index()\n{\n  //Retorna todos los registros de la bdd\n  return NombreModelo::all();\n}\n\n//Retornar a partir de la llegada de un id\npublic function show(Usuario $usuario)\n{\n  $usuario->show();\n  return $usuario;\n}\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Al llegar un identificador desde la url ",(0,r.kt)("strong",{parentName:"p"},"dominio/usuario/12")," en el show, el parametro asocia ese 12 con un objeto de tipo ",(0,r.kt)("strong",{parentName:"p"},"Usuario")," autom\xe1ticamente")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"POST")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"\n//Especificar el objeto con los atributos\npublic function store(Request $request)\n{\n  $usuario = new Usuario();\n  $usuario->nombre = $request->nombre;\n  $usuario->edad = $request->edad;\n  $usuario->save();\n  return $usuario;\n}\n\n//Alternativa Asignaci\xf3n masiva\npublic function store(Request $request)\n{\n  // El request con all se convierte a un arreglo\n  return Usuario::create($request->all());\n}\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"En la asignaci\xf3n masiva se debe proteger los datos que vengan en el request para pedir por lo menos ciertos valores como necesarios")),(0,r.kt)("p",null,"Desde app/Models/..."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"// Se marca los campos que interesam para el modelo al momento que llegue un request con m\xe1s par\xe1metros de los necesarios\nprotected $fillable = ['nombre','edad'];\n")),(0,r.kt)("h3",{id:"put"},(0,r.kt)("strong",{parentName:"h3"},"PUT")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"public function update(Request $request, Usuario $usuario)\n{\n   $usuario->update($request->all());\n   return $usuario;\n}\n")),(0,r.kt)("h3",{id:"delete"},(0,r.kt)("strong",{parentName:"h3"},"DELETE")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-PHP"},'public function destroy(Usuario $usuario)\n{\n  $usuario->delete();\n  return "Usuario Eliminado";\n}\n')))}d.isMDXComponent=!0}}]);