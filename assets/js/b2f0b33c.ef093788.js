"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7826],{3905:(e,r,a)=>{a.d(r,{Zo:()=>c,kt:()=>k});var t=a(7294);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function o(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?o(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function s(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=t.createContext({}),p=function(e){var r=t.useContext(i),a=r;return e&&(a="function"==typeof e?e(r):l(l({},r),e)),a},c=function(e){var r=p(e.components);return t.createElement(i.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,k=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return a?t.createElement(k,l(l({ref:r},c),{},{components:a})):t.createElement(k,l({ref:r},c))}));function k(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=m;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[u]="string"==typeof e?e:n,l[1]=s;for(var p=2;p<o;p++)l[p]=a[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3358:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var t=a(7462),n=(a(7294),a(3905));const o={},l="Respuesta JSON",s={unversionedId:"laravel/laravel-react/Notes/api",id:"laravel/laravel-react/Notes/api",title:"Respuesta JSON",description:"Para comunicarse con react se debe utilizar una REST API, laravel tiene un archivo destinado a registrar las rutas de ese comportamiento.",source:"@site/docs/laravel/3-laravel-react/Notes/13-api.md",sourceDirName:"laravel/3-laravel-react/Notes",slug:"/laravel/laravel-react/Notes/api",permalink:"/docs/laravel/laravel-react/Notes/api",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/laravel/3-laravel-react/Notes/13-api.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Seeder",permalink:"/docs/laravel/laravel-react/Notes/seeder"},next:{title:"Axios",permalink:"/docs/laravel/laravel-react/Notes/axios"}},i={},p=[{value:"API Resources",id:"api-resources",level:2},{value:"Crear Modelo junto a metodos API",id:"crear-modelo-junto-a-metodos-api",level:2},{value:"Retornar JSON a trav\xe9s de Resource",id:"retornar-json-a-trav\xe9s-de-resource",level:2}],c={toc:p},u="wrapper";function d(e){let{components:r,...a}=e;return(0,n.kt)(u,(0,t.Z)({},c,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"respuesta-json"},"Respuesta JSON"),(0,n.kt)("p",null,"Para comunicarse con react se debe utilizar una REST API, laravel tiene un archivo destinado a registrar las rutas de ese comportamiento."),(0,n.kt)("p",null,"El archivo ",(0,n.kt)("inlineCode",{parentName:"p"},"routes/web.php")," est\xe1 destinado a rutas de aplicaci\xf3n monol\xedtica donde se cargan las vistas web."),(0,n.kt)("p",null,"Se debe utilizar ",(0,n.kt)("inlineCode",{parentName:"p"},"routes/api.php")," en donde cada endpoint es accedido como ",(0,n.kt)("inlineCode",{parentName:"p"},"host/api/ruta")),(0,n.kt)("p",null,"Por ejemplo:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"\nRoute::apiResource('/categorias',CategoriaController::class);\n\n// api/categorias\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"apiResource carga todos los m\xe9todos del controlador y asocia los respectivos m\xe9todos con los de HTTP")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Desde el controlador para retornar un JSON con categorias"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"public function index() {\n    return response()->json([\n        'categorias' => Categoria::all()\n    ]); \n}\n")),(0,n.kt)("h2",{id:"api-resources"},"API Resources"),(0,n.kt)("p",null,"Con API Resources se pueden personalizar las respuestas JSON."),(0,n.kt)("p",null,"Para crear una respuesta personalizada:"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"php artisan make:resource CategoriaCollection")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"php artisan make:resource CategoriaResource")),(0,n.kt)("p",null,"Los archivos resultantes se encuentran en ",(0,n.kt)("inlineCode",{parentName:"p"},"app/Http/Resources")),(0,n.kt)("p",null,"El archivo ",(0,n.kt)("inlineCode",{parentName:"p"},"Collection")," se utiliza para retornar todos los campos de la misma forma, desde el controlador:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"public function index() {\n    // return response()->json([\n    //     'categorias' => Categoria::all()\n    // ]); \n\n    return new CategoriaCollection(Categoria::all());\n}\n")),(0,n.kt)("p",null,"Desde el ",(0,n.kt)("inlineCode",{parentName:"p"},"Resource")," se establece la respuesta compuesta segun se requiera:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"public function toArray($request)\n{\n    return [\n        'id' => $this->id,\n        'nombre' => $this->nombre,\n        'nombre_id' => $this->nombre. \"-\". $this->id,\n    ];\n}\n")),(0,n.kt)("h2",{id:"crear-modelo-junto-a-metodos-api"},"Crear Modelo junto a metodos API"),(0,n.kt)("p",null,"Al crear un modelo si se coloca la bandera ",(0,n.kt)("inlineCode",{parentName:"p"},"--api"),", el controlador es creado junto con los metodos necesarios para el comportamiento de API REST."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"php artisan make:model Producto --resource --api --migration")),(0,n.kt)("h2",{id:"retornar-json-a-trav\xe9s-de-resource"},"Retornar JSON a trav\xe9s de Resource"),(0,n.kt)("p",null,"Si se crea una relaci\xf3n entre modelos:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"class Pedido extends Model\n{\n    use HasFactory;\n\n    public function user(){\n        return $this->belongsTo(User::class);\n    }\n}\n")),(0,n.kt)("p",null,"Y se utiliza un Resource se puede retornar:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"     */\n    public function index()\n    {\n        return new PedidoCollection(Pedido::with('user')->where('estado',0)->get());\n    }\n")),(0,n.kt)("p",null,"El m\xe9todo ",(0,n.kt)("inlineCode",{parentName:"p"},"with")," a\xf1ade los datos del usuario completos ",(0,n.kt)("inlineCode",{parentName:"p"},"user()")," junto a los datos del pedido"))}d.isMDXComponent=!0}}]);