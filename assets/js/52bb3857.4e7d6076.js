"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4898],{3905:(e,n,a)=>{a.d(n,{Zo:()=>u,kt:()=>g});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),c=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},u=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(a),m=r,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return a?t.createElement(g,s(s({ref:n},u),{},{components:a})):t.createElement(g,s({ref:n},u))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[p]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},87918:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=a(87462),r=(a(67294),a(3905));const o={},s="Funciones",i={unversionedId:"Postgres/Funciones",id:"Postgres/Funciones",title:"Funciones",description:"Strings",source:"@site/docs/Postgres/6. Funciones.md",sourceDirName:"Postgres",slug:"/Postgres/Funciones",permalink:"/my-website/docs/Postgres/Funciones",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/Postgres/6. Funciones.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Generales",permalink:"/my-website/docs/Postgres/Generales"},next:{title:"Terminolog\xeda",permalink:"/my-website/docs/Postgres/Terminologia"}},l={},c=[{value:"Strings",id:"strings",level:2},{value:"Lower - Upper case",id:"lower---upper-case",level:3},{value:"LENGTH",id:"length",level:3},{value:"CONCAT",id:"concat",level:3},{value:"SUBSTRING y POSITION",id:"substring-y-position",level:3},{value:"Aggregate Functions",id:"aggregate-functions",level:2},{value:"Having",id:"having",level:3},{value:"Ejemplos de aplicaci\xf3n",id:"ejemplos-de-aplicaci\xf3n",level:2}],u={toc:c},p="wrapper";function d(e){let{components:n,...a}=e;return(0,r.kt)(p,(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"funciones"},"Funciones"),(0,r.kt)("h2",{id:"strings"},"Strings"),(0,r.kt)("h3",{id:"lower---upper-case"},"Lower - Upper case"),(0,r.kt)("p",null,"Seleccionar la columna ",(0,r.kt)("strong",{parentName:"p"},"name")," y obtener los resultados en may\xfasculas sin afectar lo registrado en la tabla."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT UPPER(name)\nFROM users;\n")),(0,r.kt)("p",null,"Para las min\xfasculas:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT LOWER(name)\nFROM users;\n")),(0,r.kt)("h3",{id:"length"},"LENGTH"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Retorna la cantidad de caracteres de un string")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT LENGTH(name) FROM users;\n")),(0,r.kt)("h3",{id:"concat"},"CONCAT"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT CONCAT(name,' ',lastname) AS Nombre FROM users;\n\n-- Alternativa\nSELECT name||' '||lastname AS Nombre FROM users;\n")),(0,r.kt)("h3",{id:"substring-y-position"},"SUBSTRING y POSITION"),(0,r.kt)("p",null,"Para conseguir una porci\xf3n espec\xedfica de un string"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- Selecciona desde el caracter 0 hasta el n\xfamero 5\nSELECT SUBSTRING(name,0,5) FROM users;\n")),(0,r.kt)("p",null,"Saber la posici\xf3n de un caracter espec\xedfico en un string"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT POSITION('E') in name FROM users;\n")),(0,r.kt)("p",null,"Separando nombre y apellido de un campo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    name, -- 'Leo Zubiri'\n    SUBSTRING(name,0,POSITION(' ' in name)) As Firstname,\n    SUBSTRING(name,POSITION(' ' in name)+1) As Lastname\nFROM\n    users;\n")),(0,r.kt)("h2",{id:"aggregate-functions"},"Aggregate Functions"),(0,r.kt)("p",null,"Una funci\xf3n agregada o funci\xf3n de agregaci\xf3n es una funci\xf3n en la que se procesan varios valores juntos para formar una \xfanica estad\xedstica resumida.\nLas funciones agregadas comunes incluyen: Promedio, Contar, M\xe1ximo, Mediana, M\xednimo,Suma, entre otros"),(0,r.kt)("p",null,"Este tipo de funciones requieren de agrupaci\xf3n en caso de colocar mas columnas (GROUP BY), para poder seccionar la aplicaci\xf3n de la funci\xf3n de agregaci\xf3n a distintos tipo de registros"),(0,r.kt)("h3",{id:"having"},"Having"),(0,r.kt)("p",null,"La cl\xe1usula ",(0,r.kt)("inlineCode",{parentName:"p"},"HAVING")," se utiliza para condicionar nuestra consulta en base a la funci\xf3n de agregaci\xf3n"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT \n    COUNT(*) UsersCount,\n    country\nFROM \n    users\nGROUP BY\n    country\nHAVING\n    COUNT(*) > 5\nORDER BY\n    COUNT(*) DESC;\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Lo anterior cuenta los usuarios por pa\xeds y nos devuelve los pa\xedses que tienen m\xe1s de 5 usuarios.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT \n    COUNT(*) AS Cantidad,\n    SUBSTRING(email,POSITION('@' in email)+1) AS domain\nFROM\n    users\nGROUP BY\n    SUBSTRING(email,POSITION('@' in email)+1)\nHAVING  \n    COUNT(*) > 1\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Lo anterior obtiene los disintos dominios de correo usados y la cantidad de usuarios que entran por cada dominio de correo ",(0,r.kt)("inlineCode",{parentName:"p"},"correo@dominio.com -> dominio.com"))),(0,r.kt)("h2",{id:"ejemplos-de-aplicaci\xf3n"},"Ejemplos de aplicaci\xf3n"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- 1. Cuantos usuarios tenemos con cuentas @google.com\nSELECT COUNT(*) FROM users WHERE email LIKE '%@google.com';\n\nSELECT \n    COUNT(*) AS Cantidad,\n    SUBSTRING(email,POSITION('@' in email)) AS Dominio\nFROM users\nGROUP BY SUBSTRING(email,POSITION('@' in email)) \nHAVING SUBSTRING(email,POSITION('@' in email)) LIKE '@google.com';\n------------------------------------------------------------------------\n-- 2. De qu\xe9 pa\xedses son los usuarios con cuentas de @google.com\nSELECT DISTINCT country FROM users WHERE email LIKE '%@google.com';\n\n------------------------------------------------------------------------\n-- 3. Cuantos usuarios hay por pa\xeds (country)\nSELECT COUNT(*), country\nFROM users\nGROUP BY country\nORDER BY country ASC;\n\n------------------------------------------------------------------------\n-- 4. Listado de direcciones IP de todos los usuarios de Iceland\n-- Campos requeridos first_name, last_name, country, last_connection\nSELECT first_name, last_name, country, last_connection\nFROM users\nWHERE country LIKE 'Iceland';\n\n------------------------------------------------------------------------\n-- 5. Cuantos de esos usuarios (query anterior) tiene direcci\xf3n IP\n-- que inicia en 112.XXX.XXX.XXX\nSELECT COUNT(*)\nFROM users\nWHERE \n    country LIKE 'Iceland' \n    AND last_connection LIKE '112.%';\n\n------------------------------------------------------------------------\n-- 6. Listado de usuarios de Iceland, tienen direcci\xf3n IP\n-- que inicia en 112 \xf3 28 \xf3 188\n-- Tip: Agrupar condiciones entre par\xe9ntesis \nSELECT first_name, last_name, country, last_connection\nFROM users\nWHERE \n    country LIKE 'Iceland' AND \n    (last_connection LIKE '112.%' OR last_connection LIKE '28.%'\n     OR last_connection LIKE '188.%');\n\n------------------------------------------------------------------------\n-- 7. Ordene el resultado anterior, por apellido (last_name) ascendente\n-- y luego el first_name ascendentemente tambi\xe9n\nSELECT first_name, last_name, country, last_connection\nFROM users\nWHERE \n    country LIKE 'Iceland' AND \n    (last_connection LIKE '112.%' OR last_connection LIKE '28.%'\n     OR last_connection LIKE '188.%')\nORDER BY last_name ASC, first_name ASC;\n\n------------------------------------------------------------------------\n-- 8. Listado de personas cuyo pa\xeds est\xe1 en este listado\n-- ('Mexico', 'Honduras', 'Costa Rica')\n-- Ordenar los resultados de por Pa\xeds asc, Primer nombre asc, apellido asc\nSELECT *\nFROM users\nWHERE country IN ('Mexico','Honduras','Costa Rica')\nORDER BY country ASC, first_name ASC, last_name ASC;\n\n------------------------------------------------------------------------\n-- 9. Del query anterior, cuente cu\xe1ntas personas hay por pa\xeds\n-- Ordene los resultados por Pa\xeds asc\nSELECT COUNT(*), country\nFROM users\nWHERE country IN ('Mexico','Honduras','Costa Rica')\nGROUP BY country\nORDER BY country ASC;\n")))}d.isMDXComponent=!0}}]);