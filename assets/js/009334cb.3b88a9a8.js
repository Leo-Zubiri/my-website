"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7175],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>g});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(r),d=o,g=u["".concat(c,".").concat(d)]||u[d]||p[d]||n;return r?a.createElement(g,i(i({ref:t},m),{},{components:r})):a.createElement(g,i({ref:t},m))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<n;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4541:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var a=r(7462),o=(r(7294),r(3905));const n={},i="Cambios en los Archivos",l={unversionedId:"git/02 cambios",id:"git/02 cambios",title:"Cambios en los Archivos",description:"Comparar el cambio que tuvo un archivo",source:"@site/docs/git/02 cambios.md",sourceDirName:"git",slug:"/git/02 cambios",permalink:"/my-website/docs/git/02 cambios",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/git/02 cambios.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Fundamentos",permalink:"/my-website/docs/git/01 Fundamentos"},next:{title:"Ramas, uniones y conflictos",permalink:"/my-website/docs/git/03 ramas"}},c={},s=[{value:"Comparar el cambio que tuvo un archivo",id:"comparar-el-cambio-que-tuvo-un-archivo",level:2},{value:"Cambiar el commit",id:"cambiar-el-commit",level:2},{value:"Quitar todo rastro del commit",id:"quitar-todo-rastro-del-commit",level:2},{value:"REFLOG",id:"reflog",level:2},{value:"Ignorar el seguimiento de archivos",id:"ignorar-el-seguimiento-de-archivos",level:2}],m={toc:s},u="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cambios-en-los-archivos"},"Cambios en los Archivos"),(0,o.kt)("h2",{id:"comparar-el-cambio-que-tuvo-un-archivo"},"Comparar el cambio que tuvo un archivo"),(0,o.kt)("p",null,"Para comparar el archivo original del commit y los cambios que se realizaron"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git diff\n")),(0,o.kt)("p",null,"Para visualizar con lo que est\xe9 en el stage:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git diff --stage\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"La forma en que el comando presenta los cambios no es tan clara")),(0,o.kt)("h2",{id:"cambiar-el-commit"},"Cambiar el commit"),(0,o.kt)("p",null,"Para arreglar el mensaje del \xfaltimo commit que hicimos, o bien, quitarlo para modificar y volver a hacer uno."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Cambiar el mensaje del \xfaltimo commit:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'git commit --amend -m "Mensaje actualizado"\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Si se requierea modificar los cambios que incluye el commit:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git reset --soft HEAD^\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"HEAD")," representa el \xfaltimo commit (Puede ser sustituido por el hash del commit que se requiera) y el simbolo ",(0,o.kt)("strong",{parentName:"li"},"'^'")," le indica cuantos commits antes a partir del mencionado anteriormente",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Ejemplo: ",(0,o.kt)("inlineCode",{parentName:"li"},"HEAD^3"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"HEAD^")," indica un commit antes del \xfaltimo"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"--soft"),", indica que quita el commit pero sin quitar los cambios que se encuentran en este")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Es recomendable solo revertir los commits cuando son recientes para no afectar cambios hist\xf3ricos y posiblemente tener conflictos.")),(0,o.kt)("h2",{id:"quitar-todo-rastro-del-commit"},"Quitar todo rastro del commit"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git reset --hard HEAD^\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git reset --hard HASHCOMMIT\n")),(0,o.kt)("h2",{id:"reflog"},"REFLOG"),(0,o.kt)("p",null,"Hist\xf3rico de todo los movimientos que han ocurrido entre los commits"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git reflog\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"A pesar de existan eliminaciones de commits, a\xfan se puede regresar a estos a trav\xe9s del hash")),(0,o.kt)("h2",{id:"ignorar-el-seguimiento-de-archivos"},"Ignorar el seguimiento de archivos"),(0,o.kt)("p",null,"Es normal que existan directorios o archivos que no tienen relevancia. Se puede crear un archivo ",(0,o.kt)("inlineCode",{parentName:"p"},".gitignore")," en la ra\xedz del proyecto para evitar que git les de seguimiento"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},".gitignore")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gitignore"},"directorio/\ndirectorio2/\n\narchivo.txt\n*.log\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Al archivo gitignore hay que darle seguimiento a los cambios ya que indica en todo momento que directorios o archivos del proyecto pueden ser gen\xe9ricos para git")))}p.isMDXComponent=!0}}]);