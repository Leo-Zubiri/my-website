"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3420],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>g});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),p=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||s;return a?t.createElement(g,i(i({ref:n},c),{},{components:a})):t.createElement(g,i({ref:n},c))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<s;p++)i[p]=a[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9481:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var t=a(7462),r=(a(7294),a(3905));const s={},i="Bienes Ra\xedces Proyecto",o={unversionedId:"nodejs/Bienes",id:"nodejs/Bienes",title:"Bienes Ra\xedces Proyecto",description:"Primeros pasos",source:"@site/docs/nodejs/4. Bienes.md",sourceDirName:"nodejs",slug:"/nodejs/Bienes",permalink:"/my-website/docs/nodejs/Bienes",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/nodejs/4. Bienes.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Express",permalink:"/my-website/docs/nodejs/Express"},next:{title:"MVC",permalink:"/my-website/docs/nodejs/3.1 MVC"}},l={},p=[{value:"Primeros pasos",id:"primeros-pasos",level:2},{value:"Establecer script para iniciar la aplicaci\xf3n",id:"establecer-script-para-iniciar-la-aplicaci\xf3n",level:2},{value:"Instalar nodemon",id:"instalar-nodemon",level:2},{value:"Pug Template Engine",id:"pug-template-engine",level:2},{value:"Uso",id:"uso",level:3},{value:"Pasar informaci\xf3n a las vistas",id:"pasar-informaci\xf3n-a-las-vistas",level:3},{value:"Sintaxis pug Ejemplo:",id:"sintaxis-pug-ejemplo",level:3},{value:"Tailwind CSS",id:"tailwind-css",level:2},{value:"Carpeta public (static files)",id:"carpeta-public-static-files",level:3},{value:"Agregar script package.json",id:"agregar-script-packagejson",level:3},{value:"Crear layout",id:"crear-layout",level:3},{value:"Mantener Valores en formulario",id:"mantener-valores-en-formulario",level:2},{value:"Evitar correos de cuenta duplicados",id:"evitar-correos-de-cuenta-duplicados",level:2},{value:"Hash Passwords",id:"hash-passwords",level:2},{value:"Token \xdanico",id:"token-\xfanico",level:2},{value:"Nodemailer - Correos en Node",id:"nodemailer---correos-en-node",level:2},{value:"Configurar el env\xedo",id:"configurar-el-env\xedo",level:3},{value:"Confirmar cuenta con token",id:"confirmar-cuenta-con-token",level:3},{value:"Leer el token",id:"leer-el-token",level:4},{value:"Confirmar cuenta token",id:"confirmar-cuenta-token",level:4},{value:"CSRF",id:"csrf",level:2},{value:"CSURF",id:"csurf",level:3}],c={toc:p},u="wrapper";function d(e){let{components:n,...s}=e;return(0,r.kt)(u,(0,t.Z)({},c,s,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"bienes-ra\xedces-proyecto"},"Bienes Ra\xedces Proyecto"),(0,r.kt)("h2",{id:"primeros-pasos"},"Primeros pasos"),(0,r.kt)("p",null,"Inicializar el proyecto en un directorio y crear el package.json:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"npm init")),(0,r.kt)("p",null,"y posteriormente instalar ",(0,r.kt)("inlineCode",{parentName:"p"},"express")),(0,r.kt)("h2",{id:"establecer-script-para-iniciar-la-aplicaci\xf3n"},"Establecer script para iniciar la aplicaci\xf3n"),(0,r.kt)("p",null,"Desde el ",(0,r.kt)("em",{parentName:"p"},"package.json")," en el apartado de scripts se establece una palabra clave y los c\xf3digos de consola que ejecutar\xe1:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'  "main": "index.js",\n  "scripts": {\n    "start": "node ./index.js"\n  },\n  "author": "Leo Zubiri",\n')),(0,r.kt)("p",null,"y para ejecutarlo se utiliza: ",(0,r.kt)("inlineCode",{parentName:"p"},"npm run start")," o ",(0,r.kt)("inlineCode",{parentName:"p"},"npm start")),(0,r.kt)("h2",{id:"instalar-nodemon"},"Instalar nodemon"),(0,r.kt)("p",null,"Nodemon se utiliza para el Hot Reload durante el desarrollo y de esta manera reiniciar el servidor al detectar cambios."),(0,r.kt)("p",null,"El script en el package:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"server": "nodemon index.js"\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Se inicializa un servidor con express")),(0,r.kt)("h2",{id:"pug-template-engine"},"Pug Template Engine"),(0,r.kt)("p",null,"Para instalar el motor de plantilla: ",(0,r.kt)("inlineCode",{parentName:"p"},"npm i pug")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'app="index.js con servidor express"',app:'"index.js',con:!0,servidor:!0,'express"':!0},"// Habilitar Pug\napp.set('view engine','pug')\napp.set('views','./views')\n")),(0,r.kt)("h3",{id:"uso"},"Uso"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"router.get('/login',function(req,res){\n    res.render('auth/login');\n});\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pug",metastring:'title="./views/auth/login.pug"',title:'"./views/auth/login.pug"'},"h2 Login \np Inicia Sesi\xf3n \n")),(0,r.kt)("h3",{id:"pasar-informaci\xf3n-a-las-vistas"},"Pasar informaci\xf3n a las vistas"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"    res.render('auth/login',{\n        autenticado: true,\n        user: 'Leo Zubiri'\n    });\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pug",metastring:'title="./views/auth/login.pug"',title:'"./views/auth/login.pug"'},"h2 Login \n\nif autenticado\n    p= user \nelse \n    p No autenticado\n\n")),(0,r.kt)("h3",{id:"sintaxis-pug-ejemplo"},"Sintaxis pug Ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="userController.js"',title:'"userController.js"'},"const formularioOlvidePassword = (req,res)=>{\n    res.render('auth/forgot-password',{\n        pagina: 'Recupera el Acceso a tu Cuenta'\n    });\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pug",metastring:'title="Layout index.pug"',title:'"Layout','index.pug"':!0},'doctype html\nhtml(lang="es")\n    head\n        meta(charset="UTF-8")\n        meta(http-equiv="X-UA-Compatible", content="IE=edge")\n        meta(name="viewport", content="width=device-width, initial-scale=1.0")\n        title Bienes Raices | #{pagina}\n        link(rel="stylesheet", href="/css/app.css")\n    \n    body.min-h-screen.bg-gray-50\n        main(class="mx-auto container mt-10 px-2")\n            block contenido\n\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pug",metastring:'title="forgot-password.pug"',title:'"forgot-password.pug"'},"extends ../layouts/index\n\nblock contenido\n    div.py-10\n        h1.text-4xl.my-10.font-extrabold.text-center Bienes\n            span.font-normal Raices\n        h2.text-center.text-2xl.font-extrabold=pagina\n")),(0,r.kt)("h2",{id:"tailwind-css"},"Tailwind CSS"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"npm i -D tailwindcss postcss autoprefixer postcss-cli")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"npx tailwindcss init -p")),(0,r.kt)("h3",{id:"carpeta-public-static-files"},"Carpeta public (static files)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},"// Carpeta P\xfablica\napp.use(express.static('public'));\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"La carpeta public tiene el directorio css, img y js. En el css se crea ",(0,r.kt)("inlineCode",{parentName:"p"},"tailwind.css"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n")),(0,r.kt)("h3",{id:"agregar-script-packagejson"},"Agregar script package.json"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  "scripts": {\n    "server": "nodemon index.js",\n    "css": "postcss public/css/tailwind.css -o public/css/app.css --watch"\n  },\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"npm run css")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Lo anterior indica donde se encuentra la configuraci\xf3n de tailwindcss y el output, la ruta donde se almacenar\xe1 el compilado css.")),(0,r.kt)("h3",{id:"crear-layout"},"Crear layout"),(0,r.kt)("p",null,"Se crea un layout principal para que se importe el css"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pug",metastring:'title="./views/layouts/index.pug"',title:'"./views/layouts/index.pug"'},'doctype html\nhtml(lang="es")\n    head\n        meta(charset="UTF-8")\n        meta(http-equiv="X-UA-Compatible", content="IE=edge")\n        meta(name="viewport", content="width=device-width, initial-scale=1.0")\n        title Bienes Raices |\n        link(rel="stylesheet", href="/css/app.css")\n    \n    body.min-h-screen.bg-gray-50\n        main(class="mx-auto container mt-10 px-2")\n            block contenido\n\n')),(0,r.kt)("p",null,"Desde el archivo donde se implemente el layout:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pug"},"extends ../layouts/index\n\nblock contenido\n    div\n        h2.text-center Mi titulo\n")),(0,r.kt)("h2",{id:"mantener-valores-en-formulario"},"Mantener Valores en formulario"),(0,r.kt)("p",null,"Al tener errores se carga la p\xe1gina y se pierden en los inputs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Al dar error en validaci\xf3n retornar la misma info que llega\nres.render('auth/register',{\n    pagina: 'Crear Cuenta',\n    errores: errores.array(),\n    usuario: {\n        name: req.body.name,\n        email: req.body.email\n    }\n});\n")),(0,r.kt)("p",null,"Si el objeto usuario existe carga los valores anteriormente mandados"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pug"},'input(\n    placeholder="Tu nombre"\n    type="text"\n    name="name"\n    value=usuario ? usuario.name : \'\'\n)\n')),(0,r.kt)("h2",{id:"evitar-correos-de-cuenta-duplicados"},"Evitar correos de cuenta duplicados"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Verificar que no exista un usuario con el mismo correo\n    const existeUsuario = await Usuario.findOne({ where: {email:req.body.email}})\n    if(existeUsuario){\n        res.render('auth/register',{\n            pagina: 'Crear Cuenta',\n            errores: [{msg: 'Existe un usuario con este correo'}],\n            usuario: {\n                name: req.body.name,\n                email: req.body.email\n            }\n        });\n       \n    } else {\n        const usuario = await Usuario.create(req.body);\n        res.json(usuario)\n    }\n    \n")),(0,r.kt)("h2",{id:"hash-passwords"},"Hash Passwords"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"npm i bcrypt")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import bcrypt from 'bcrypt'\n\nconst salt = await bcrypt.genSalt(10);\nmodelo.password = await bcrypt.hash(modelo.password,salt)\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Salting is nothing but adding a random string to your password hash. Now when you use salt, it automatically includes in your hashed password. So here for the same password overall hashed value is different and it's not predictable.")),(0,r.kt)("h2",{id:"token-\xfanico"},"Token \xdanico"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Crear directorio ",(0,r.kt)("inlineCode",{parentName:"li"},"./helpers/")),(0,r.kt)("li",{parentName:"ol"},"Crear ",(0,r.kt)("inlineCode",{parentName:"li"},"./helpers/tokens.js"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Generar un token sin una librer\xeda\nconst generarID = () => Math.random().toString(32).substring(2) + Date.now().toString(32);\n\nexport {\n    generarID\n}\n")),(0,r.kt)("h2",{id:"nodemailer---correos-en-node"},"Nodemailer - Correos en Node"),(0,r.kt)("p",null,"Para testear los correos que se env\xeden se puede utilizar la p\xe1gina ",(0,r.kt)("strong",{parentName:"p"},"mailtrap")," y las configuraciones que establece."),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(4708).Z,width:"1920",height:"720"})),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"npm i nodemailer")),(0,r.kt)("p",null,"Colocar las credenciales para el correo como variables de entorno y posteriormente asignarla a la configuraci\xf3n:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"}," import nodemailer from 'nodemailer'\n\n const emailRegister = async (datos) => {\n    const transport = nodemailer.createTransport({\n        host: process.env.EMAIL_HOST,\n        port: process.env.EMAIL_PORT,\n        auth: {\n          user: process.env.EMAIL_USER,\n          pass: process.env.EMAIL_PASS\n        }\n    });\n }\n\n export {\n    emailRegister\n }\n")),(0,r.kt)("h3",{id:"configurar-el-env\xedo"},"Configurar el env\xedo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./helpers/email.js"',title:'"./helpers/email.js"'}," import nodemailer from 'nodemailer'\n\n const emailRegister = async (datos) => {\n    const transport = nodemailer.createTransport({\n        host: process.env.EMAIL_HOST,\n        port: process.env.EMAIL_PORT,\n        auth: {\n          user: process.env.EMAIL_USER,\n          pass: process.env.EMAIL_PASS\n        }\n    });\n\n    const {email,name,token} = datos;\n\n    // Enviar email\n    await transport.sendMail({\n        from: 'BienesRaices.com',\n        to: email,\n        subject: 'Confirma tu cuenta en BienesRaices',\n        text: 'Da click en el enlace para confirmar tu cuenta',\n        html: `\n            <p>Hola ${name}, comprueba tu cuenta en Bienes Raices</p>\n            <p>Tu cuenta ya esta lista, solo debes confirmarla en el siguiente enlace:\n            <a href=\"\">Confirmar cuenta</a></p>\n\n            <p>Si tu no creaste esta cuenta puedes ignorar el mensaje</p>\n        `\n    })\n }\n\n export {\n    emailRegister\n }\n")),(0,r.kt)("h3",{id:"confirmar-cuenta-con-token"},"Confirmar cuenta con token"),(0,r.kt)("h4",{id:"leer-el-token"},"Leer el token"),(0,r.kt)("p",null,"El endpoint:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="UserRoutes"',title:'"UserRoutes"'},"// Routing din\xe1mico\nrouter.get('/confirm/:token',confirmar);\n")),(0,r.kt)("p",null,"El enlace en el correo apunta a: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'<a href="${process.env.BACKEND_URL}:${process.env.PORT ?? 3000}/auth/confirm/${token}">Confirmar cuenta</a>\n')),(0,r.kt)("h4",{id:"confirmar-cuenta-token"},"Confirmar cuenta token"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const confirmar = async (req,res) => {\n    const {token} = req.params;\n    \n    const usuario = await Usuario.findOne({ where: {token} });\n    \n    // Verificar si el token es v\xe1lido\n    if(!usuario){\n        return res.render('auth/confirm-account',{\n            pagina: 'Error al confirmar tu cuenta',\n            mensaje: 'Hubo un error al confirmar tu cuenta, intenta de nuevo',\n            error: true\n        });\n    }\n\n    // Confirmar la cuenta\n    usuario.token = null;\n    usuario.confirmed = true;\n\n    await usuario.save();\n\n    res.render('auth/confirm-account',{\n        pagina: 'Cuenta confirmada',\n        mensaje: 'La cuenta se confirm\xf3 correctamente',\n    });\n\n}\n")),(0,r.kt)("h2",{id:"csrf"},"CSRF"),(0,r.kt)("p",null,"El CSRF (del ingl\xe9s Cross-site request forgery o falsificaci\xf3n de petici\xf3n en sitios cruzados) es un tipo de exploit malicioso de un sitio web en el que comandos no autorizados son transmitidos por un usuario en el cual el sitio web conf\xeda."),(0,r.kt)("h3",{id:"csurf"},"CSURF"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Deprecated")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"npm i csurf cookie-parser")),(0,r.kt)("p",null,"Desde la configuraci\xf3n de express"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},"\nimport express from 'express';\nimport csrf from 'csurf'\nimport cookieParser from 'cookie-parser';\n\nconst app = express();\n\n// Habilitar lectura de datos de formularios\napp.use(express.urlencoded({extended: true}));\n\n// Habilitar Cookie Parser\napp.use(cookieParser())\n// Habilitar CSRF\napp.use(csrf({cookie: true}))\n\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Cada formulario necesitar\xe1 el token de csrf para ser aceptado")),(0,r.kt)("p",null,"Se proporciona a la vista:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="UserController"',title:'"UserController"'},"const formularioRegistro = (req,res)=>{\n    res.render('auth/register',{\n        pagina: 'Crear Cuenta',\n        csrfToken: req.csrfToken()\n    });\n}\n")),(0,r.kt)("p",null,"Desde el formulario:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pug",metastring:'title="register.pug"',title:'"register.pug"'},'   form.space-y-6(method="POST" action="/auth/register" noValidate)\n       input(type="hidden" name="_csrf" value= csrfToken)\n')))}d.isMDXComponent=!0},4708:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/mailtrap-e5e6112eb634db1f13d7ff6e88b89649.png"}}]);