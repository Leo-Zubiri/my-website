"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3954],{3905:(e,a,r)=>{r.d(a,{Zo:()=>d,kt:()=>b});var t=r(67294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function i(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=t.createContext({}),c=function(e){var a=t.useContext(l),r=a;return e&&(r="function"==typeof e?e(a):s(s({},a),e)),r},d=function(e){var a=c(e.components);return t.createElement(l.Provider,{value:a},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(r),m=n,b=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return r?t.createElement(b,s(s({ref:a},d),{},{components:r})):t.createElement(b,s({ref:a},d))}));function b(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[u]="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},59442:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=r(87462),n=(r(67294),r(3905));const o={},s="Introducci\xf3n",i={unversionedId:"Postgres/Introduccion",id:"Postgres/Introduccion",title:"Introducci\xf3n",description:"Base de datos",source:"@site/docs/Postgres/4. Introduccion.md",sourceDirName:"Postgres",slug:"/Postgres/Introduccion",permalink:"/my-website/docs/Postgres/Introduccion",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/Postgres/4. Introduccion.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Conexi\xf3n",permalink:"/my-website/docs/Postgres/Conexion"},next:{title:"Generales",permalink:"/my-website/docs/Postgres/Generales"}},l={},c=[{value:"Base de datos",id:"base-de-datos",level:2},{value:"Redis",id:"redis",level:3},{value:"Postgres y Redis",id:"postgres-y-redis",level:3}],d={toc:c},u="wrapper";function p(e){let{components:a,...r}=e;return(0,n.kt)(u,(0,t.Z)({},d,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,n.kt)("h2",{id:"base-de-datos"},"Base de datos"),(0,n.kt)("p",null,"Es una colecci\xf3n estructurada de informaci\xf3n organizada y almacenada de manera sistem\xe1tica en un sistema de gesti\xf3n de base de datos (SGBD)"),(0,n.kt)("p",null,"Entre los m\xe1s populares SQL o relacionales:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Microsoft SQL Server"),(0,n.kt)("li",{parentName:"ul"},"Oracle"),(0,n.kt)("li",{parentName:"ul"},"PostgreSQL"),(0,n.kt)("li",{parentName:"ul"},"MySQL"),(0,n.kt)("li",{parentName:"ul"},"MariaDB")),(0,n.kt)("p",null,"Entre las base de datos m\xe1s populares No relacionales:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Cloud Fire base"),(0,n.kt)("li",{parentName:"ul"},"MongoDB"),(0,n.kt)("li",{parentName:"ul"},"Cassandra"),(0,n.kt)("li",{parentName:"ul"},"Redis")),(0,n.kt)("h3",{id:"redis"},"Redis"),(0,n.kt)("p",null,"Redis es una base de datos NoSQL de tipo clave-valor distribuida en memoria. La durabilidad de los datos es opcional y soporta varias estructuras de datos y transacciones."),(0,n.kt)("p",null,"Su nombre viene de REmote DIctionary Server, creado en 2009. El proyecto es open source y est\xe1 escrito en el lenguaje de programaci\xf3n C."),(0,n.kt)("p",null,"Sus casos de uso m\xe1s comunes son como base de datos, sistema de cach\xe9 y broker de mensajer\xeda."),(0,n.kt)("p",null,"La principal ventaja de Redis es su velocidad de acceso, tanto de lectura, como de escritura. Esta velocidad superior a otras bases de datos se consigue, ya que no es necesario realizar la escritura a disco de los datos para considerar la transacci\xf3n terminada. A cada dato, asigna una clave, y puede almacenar tipos de datos abstractos como tablas hash, cadenas de texto o JSON."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"REDIS puede ser integrada a una base de datos relacional para mejorar el rendimiento y capacidad en las consultas de una aplicaci\xf3n")),(0,n.kt)("h3",{id:"postgres-y-redis"},"Postgres y Redis"),(0,n.kt)("p",null,"Se puede agregar almacenamiento en cach\xe9 a una aplicaci\xf3n PostgreSQL usando Redis."),(0,n.kt)("p",null,"El almacenamiento en cach\xe9 se utiliza para acelerar las aplicaciones en la nube, particularmente para las lecturas de bases de datos."),(0,n.kt)("p",null,"La mayor\xeda de las aplicaciones almacenan (escriben) y recuperan (leen) repetidamente alg\xfan tipo de datos. Sin embargo, en la mayor\xeda de los casos, el n\xfamero de lecturas supera con creces el n\xfamero de escrituras. Para hacer esto m\xe1s eficiente, utilizamos una capa de almacenamiento en cach\xe9. El almacenamiento en cach\xe9 es el acto de escribir en una ubicaci\xf3n (por ejemplo, un bloque de memoria) dise\xf1ada espec\xedficamente para la recuperaci\xf3n r\xe1pida de solicitudes comunes."),(0,n.kt)("p",null,"Por ejemplo, imagine a un cliente creando un perfil en una tienda online. El cliente completa su nombre, n\xfamero de tel\xe9fono y direcci\xf3n, que almacenamos en nuestra base de datos. Debido a que estos datos son necesarios en m\xfaltiples puntos del proceso de pago, vale la pena almacenarlos en un cach\xe9 la primera vez que los recuperamos de la base de datos. Esto acelera el tiempo de procesamiento de la solicitud para todas las recuperaciones siguientes. La diferencia en la velocidad de recuperaci\xf3n para cualquier solicitud puede ser de apenas milisegundos, pero cuando desarrollamos aplicaciones para la nube, para millones de usuarios simult\xe1neamente, esos milisegundos se suman."),(0,n.kt)("p",null,"El almacenamiento en cach\xe9 de aplicaciones en la nube presenta algunas complejidades, pero tambi\xe9n ofrece oportunidades de optimizaci\xf3n. En lugar de utilizar un bloque de memoria (y la naturaleza ca\xf3tica e ilimitada que ello conlleva), \xa1podemos utilizar dos bases de datos! Podemos utilizar una base de datos como almac\xe9n de datos y otra como cach\xe9. Adem\xe1s, podemos elegir una base de datos para nuestro almac\xe9n de datos que est\xe9 optimizada para cosas como el control de concurrencia y una para nuestro cach\xe9 optimizada para lecturas y escrituras r\xe1pidas, sin dejar de aprovechar todo lo que la nube nos ofrece en t\xe9rminos de escalabilidad."))}p.isMDXComponent=!0}}]);