"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7237],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>m});var r=a(7294);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var s=r.createContext({}),p=function(e){var n=r.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},v=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),v=t,m=u["".concat(s,".").concat(v)]||u[v]||d[v]||l;return a?r.createElement(m,i(i({ref:n},c),{},{components:a})):r.createElement(m,i({ref:n},c))}));function m(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var l=a.length,i=new Array(l);i[0]=v;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:t,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}v.displayName="MDXCreateElement"},4882:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=a(7462),t=(a(7294),a(3905));const l={},i="Livewire",o={unversionedId:"laravel/devstagram/Notes/Livewire",id:"laravel/devstagram/Notes/Livewire",title:"Livewire",description:"Es un framework full stack de laravel para evitar el reload de la pagina al mandar al controlador y despues retornar de nuevo. Este framework esta basado en AJAX, por lo que realiza un re-render de lo que cambi\xf3 en el DOM.",source:"@site/docs/laravel/1-devstagram/Notes/Livewire.md",sourceDirName:"laravel/1-devstagram/Notes",slug:"/laravel/devstagram/Notes/Livewire",permalink:"/docs/laravel/devstagram/Notes/Livewire",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/laravel/1-devstagram/Notes/Livewire.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"latest()",permalink:"/docs/laravel/devstagram/Notes/Latest"},next:{title:"MVC",permalink:"/docs/laravel/devstagram/Notes/MVC"}},s={},p=[{value:"Funciones Soportadas por Livewire",id:"funciones-soportadas-por-livewire",level:2},{value:"Instalaci\xf3n",id:"instalaci\xf3n",level:2},{value:"Crear componente Livewire",id:"crear-componente-livewire",level:2},{value:"Utilizar el componente",id:"utilizar-el-componente",level:2},{value:"Pasar informaci\xf3n y mostrarla",id:"pasar-informaci\xf3n-y-mostrarla",level:2},{value:"Eventos en livewire",id:"eventos-en-livewire",level:2},{value:"Interfaces Reactivas",id:"interfaces-reactivas",level:2}],c={toc:p},u="wrapper";function d(e){let{components:n,...a}=e;return(0,t.kt)(u,(0,r.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"livewire"},"Livewire"),(0,t.kt)("p",null,"Es un framework full stack de laravel para evitar el reload de la pagina al mandar al controlador y despues retornar de nuevo. Este framework esta basado en AJAX, por lo que realiza un re-render de lo que cambi\xf3 en el DOM.\nEs una mezcla cliente/servidor."),(0,t.kt)("h2",{id:"funciones-soportadas-por-livewire"},"Funciones Soportadas por Livewire"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Validacion de formularios"),(0,t.kt)("li",{parentName:"ul"},"Subida de archivos"),(0,t.kt)("li",{parentName:"ul"},"Paginaci\xf3n"),(0,t.kt)("li",{parentName:"ul"},"Redireccionar"),(0,t.kt)("li",{parentName:"ul"},"Autorizaci\xf3n "),(0,t.kt)("li",{parentName:"ul"},"Mensajes Flash"),(0,t.kt)("li",{parentName:"ul"},"Eventos")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Se recomienda instalar extensiones de livewire en vscode")),(0,t.kt)("h2",{id:"instalaci\xf3n"},"Instalaci\xf3n"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"composer require livewire/livewire")),(0,t.kt)("h2",{id:"crear-componente-livewire"},"Crear componente Livewire"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"php artisan make:livewire nombre")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Lo anterior crea un archivo php en ",(0,t.kt)("strong",{parentName:"p"},"app/Http/Livewire/archivo.php")," y la vista en ",(0,t.kt)("strong",{parentName:"p"},"resources/views/livewire/archivo.blade.php"))),(0,t.kt)("p",null,"En el caso de la vista, siempre se debe retornar un ",(0,t.kt)("inlineCode",{parentName:"p"},"<div>")," general"),(0,t.kt)("h2",{id:"utilizar-el-componente"},"Utilizar el componente"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"<livewire:nombre-componente/>")),(0,t.kt)("p",null,"Ademas colocar la directiva en el head:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"@livewireStyles\n")),(0,t.kt)("p",null,"Y antes de cerrar el body:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"@livewireScripts\n")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Se deve envolve el codigo con las anteriores dos directivas para el correcto funcionamiento de AJAX")),(0,t.kt)("h2",{id:"pasar-informaci\xf3n-y-mostrarla"},"Pasar informaci\xf3n y mostrarla"),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Se pueden utilizar Modelos en el archivo controlador de livewire pero no est\xe1 disponible el modelo Request como en un controlador normal.")),(0,t.kt)("p",null,"Si se declaran atributos de clase en el archivo php mencionado, no es necesario pasarlo a la vista. Autom\xe1ticamente ya se puede utilizar."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Pasar info a trav\xe9s de su archivo php")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"\n    public $mensaje = \"Contenido de atributo\";\n    \n    public function render()\n    {\n        return view('livewire.like-post');\n    }\n\n    ...\n\n\n    <div>\n        <h1> {{ $mensaje }}</h1>\n    </div>\n\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Pasar info a trav\xe9s de la etiqueta de componente")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},'    @php\n        $mensaje = "Hola mundo";\n    @endphp\n    <livewire:like-post :mensaje="$mensaje"/>\n')),(0,t.kt)("h2",{id:"eventos-en-livewire"},"Eventos en livewire"),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Con livewire ya no se necesita utilizar formularios ni button con el type submit, tampoco el csrf")),(0,t.kt)("p",null,"Componente livewire con evento wire:click que apunta a la funcion like"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},'<div>\n    <button \n        wire:click="like"\n    >\n        <svg xmlns="http://www.w3.org/2000/svg" fill="red" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">\n            <path stroke-linecap="round" stroke-linejoin="round" d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z" />\n        </svg>\n    </button>\n</div>\n\n')),(0,t.kt)("p",null,"Desde la logica del componente"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},'    public function like(){\n        return "dede la funcion like";\n    }\n')),(0,t.kt)("h2",{id:"interfaces-reactivas"},"Interfaces Reactivas"),(0,t.kt)("p",null,"Se debe crear una funcion mount que establece variables la primera vez que se carga el componente"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"    public $isLiked;\n\n    public function mount($post){\n        $this->isLiked = $post->checklike(auth()->user());\n    }\n")),(0,t.kt)("p",null,"Para que se vuelva reactivo se debe ir alterando esa variable a lo largo del c\xf3digo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"    public function like(){\n        if($this->post->checkLike(auth()->user())){\n            $this->isLiked = false;\n        } else {\n            $this->isLiked = true;\n        }\n    }\n")),(0,t.kt)("p",null,"Y se pueden escuchar los cambios desde la vista del componente livewire:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},'<div>\n    <button \n        wire:click="like"\n    >\n        <svg xmlns="http://www.w3.org/2000/svg" \n            fill="{{ $isLiked ? "red" : "white" }}" \n            ...\n        </svg>\n    </button>\n</div>\n')))}d.isMDXComponent=!0}}]);