"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6763],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>g});var r=a(7294);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var s=r.createContext({}),c=function(e){var n=r.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(a),m=t,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return a?r.createElement(g,i(i({ref:n},p),{},{components:a})):r.createElement(g,i({ref:n},p))}));function g(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:t,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},715:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=a(7462),t=(a(7294),a(3905));const o={},i="Bases de Node",l={unversionedId:"nodejs/Bases",id:"nodejs/Bases",title:"Bases de Node",description:"Requerir Paquetes (Require)",source:"@site/docs/nodejs/1.Bases.md",sourceDirName:"nodejs",slug:"/nodejs/Bases",permalink:"/my-website/docs/nodejs/Bases",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/nodejs/1.Bases.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Node JS",permalink:"/my-website/docs/nodejs/"},next:{title:"Consola Interactiva",permalink:"/my-website/docs/nodejs/Consola_Interactiva"}},s={},c=[{value:"Requerir Paquetes (Require)",id:"requerir-paquetes-require",level:2},{value:"Importar archivos JS",id:"importar-archivos-js",level:2},{value:"Inicializar aplicaci\xf3n Node",id:"inicializar-aplicaci\xf3n-node",level:2},{value:"Recibir informaci\xf3n en l\xednea de comando",id:"recibir-informaci\xf3n-en-l\xednea-de-comando",level:2},{value:"Yargs",id:"yargs",level:2},{value:"Configuraci\xf3n de variables, opciones y banderas en consola",id:"configuraci\xf3n-de-variables-opciones-y-banderas-en-consola",level:3},{value:"Configuraci\xf3n independiente de yargs",id:"configuraci\xf3n-independiente-de-yargs",level:3},{value:"Colores en consola",id:"colores-en-consola",level:2}],p={toc:c},d="wrapper";function u(e){let{components:n,...a}=e;return(0,t.kt)(d,(0,r.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"bases-de-node"},"Bases de Node"),(0,t.kt)("h2",{id:"requerir-paquetes-require"},"Requerir Paquetes (Require)"),(0,t.kt)("p",null,"Node tiene variedad de paquetes detallados en su documentaci\xf3n, para importar se utiliza require:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs'); // File System\n\nfs.writeLine('archivo.txt',\"contenido\", (err)=>{\n    if(err) throw err;\n\n    console.log('Archivo creado');\n});\n")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},(0,t.kt)("inlineCode",{parentName:"p"},"File System en Node"))),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"importar-archivos-js"},"Importar archivos JS"),(0,t.kt)("p",null,"Para importar funcionalidades JS alojadas en otros archivos:"),(0,t.kt)("p",null,"Considerando una funci\xf3n dentro de un archivo JS"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Archivo Secundario JS"',title:'"Archivo',Secundario:!0,'JS"':!0},"const myFunction = () => {\n    ...\n} \n\nmodule.exports = {\n    myFunction\n}\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Archivo principal JS"',title:'"Archivo',principal:!0,'JS"':!0},"const {myFunction} = require('./archivo.js');\n\nmyFunction();\n")),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"inicializar-aplicaci\xf3n-node"},"Inicializar aplicaci\xf3n Node"),(0,t.kt)("p",null,"Desde el directorio del proyecto:"),(0,t.kt)("p",null,"Configuraci\xf3n b\xe1sica"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"npm init")),(0,t.kt)("p",null,"Configuraci\xf3n con opciones en el package.json\n",(0,t.kt)("inlineCode",{parentName:"p"},"npm init -Y")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"La configuraci\xf3n y dependencias se establecen en el ",(0,t.kt)("inlineCode",{parentName:"p"},"package.json"))),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"recibir-informaci\xf3n-en-l\xednea-de-comando"},"Recibir informaci\xf3n en l\xednea de comando"),(0,t.kt)("p",null,"En una app de javascript se pueden leer los argumentos colocados en la l\xednea de comandos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"console.log(process.argv);\n")),(0,t.kt)("p",null,"Considerando la ejecuci\xf3n de una app con una variable desde la l\xednea de comandos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"node app --var=10\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const [,,arg3=\"var=5\"] = process.argv;\nconst [, var] = arg3.split('=');\n")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Lo anterior accede seg\xfan el orden de los argumentos por lo que no es tan conveniente.")),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"yargs"},"Yargs"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"npm i yargs")),(0,t.kt)("p",null,"Yargs es un paquete que controla las entradas por l\xednea de comandos, siendo una mejor manera para leer argumentos."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Utilizando Yargs"',title:'"Utilizando','Yargs"':!0},"const argv = require('yargs').argv;\n\nconsole.log(argv.var);\n")),(0,t.kt)("p",null,"La constante argv es un objeto, entonces considerando ",(0,t.kt)("inlineCode",{parentName:"p"},"node app --var=5")," se tiene:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"{\n    var:5,\n}\n")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"El orden de los argumentos no es tan importante por lo que es una mejor manera de trabajar con las variables desde la l\xednea de comandos")),(0,t.kt)("h3",{id:"configuraci\xf3n-de-variables-opciones-y-banderas-en-consola"},"Configuraci\xf3n de variables, opciones y banderas en consola"),(0,t.kt)("p",null,"Para crear mas de una forma de nombrar una variable y establecer mas configuraciones:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const argv = require('yargs')\n    .option('var',{\n        alias: 'variable',\n        demandOption: true,\n        default: 5,\n        describe: 'Descripcion para el help',\n        type: 'number'\n    })\n    .option('l',{\n        alias: 'listar',\n        type: 'boolean',\n        demandOption: true,\n        default: false,\n    })\n    .check( (argv, options) => {\n        if( isNaN(argv.var)) throw 'La variable no es n\xfamerica' \n\n        if()\n        return true;\n    })\n    .argv;\n")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Desde la consola se puede indicar la variable de las formas establecidas: ",(0,t.kt)("inlineCode",{parentName:"p"},"node app --var=5")," o ",(0,t.kt)("inlineCode",{parentName:"p"},"node app --variable=5"))),(0,t.kt)("hr",null),(0,t.kt)("h3",{id:"configuraci\xf3n-independiente-de-yargs"},"Configuraci\xf3n independiente de yargs"),(0,t.kt)("p",null,"Crear directorio ",(0,t.kt)("inlineCode",{parentName:"p"},"config/yargs.js"),", se debe destinar toda la l\xf3gica de yargs anteriormente mencionada."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="config/yargs.js"',title:'"config/yargs.js"'},"const argv = require('yargs')\n    .option('var',{\n    ...\n    .check( (argv, options) => {\n        ...\n    })\n    .argv;\n\nmodule.exports = argv;\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const argv = require('./config/yargs')\n")),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"colores-en-consola"},"Colores en consola"),(0,t.kt)("p",null,"El paquete ",(0,t.kt)("inlineCode",{parentName:"p"},"colors")," ayuda a retornar mensajes con distintos colores seg\xfan se le indique para que las salidas tengan mayor est\xe9tica"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"npm i colors")),(0,t.kt)("p",null,"Ejemplo de uso"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},"const colors = require('colors');\n\nconsole.log('satisfactorio'.green);\nconsole.log(colors.green('Correcto'))\n")))}u.isMDXComponent=!0}}]);