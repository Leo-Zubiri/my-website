"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4152],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>g});var r=n(67294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var i=r.createContext({}),c=function(e){var a=r.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},u=function(e){var a=c(e.components);return r.createElement(i.Provider,{value:a},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=t,g=m["".concat(i,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(g,l(l({ref:a},u),{},{components:n})):r.createElement(g,l({ref:a},u))}));function g(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s[m]="string"==typeof e?e:t,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},66249:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),t=(n(67294),n(3905));const o={},l="Ramas, uniones y conflictos",s={unversionedId:"git/03 ramas",id:"git/03 ramas",title:"Ramas, uniones y conflictos",description:"La rama es una versi\xf3n alternativa del proyecto principal donde se puede modificar y trabajar con el c\xf3digo tal cual estaba en ese momento. Cuando alguna funcionalidad es aprobada se pueden pasar los cambios a la rama principal",source:"@site/docs/git/03 ramas.md",sourceDirName:"git",slug:"/git/03 ramas",permalink:"/my-website/docs/git/03 ramas",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/git/03 ramas.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cambios en los Archivos",permalink:"/my-website/docs/git/02 cambios"},next:{title:"Stash",permalink:"/my-website/docs/git/04 stash"}},i={},c=[{value:"Rama",id:"rama",level:2},{value:"Merge",id:"merge",level:2},{value:"Merge y conflictos",id:"merge-y-conflictos",level:2},{value:"Nomenclatura de una versi\xf3n",id:"nomenclatura-de-una-versi\xf3n",level:2}],u={toc:c},m="wrapper";function p(e){let{components:a,...n}=e;return(0,t.kt)(m,(0,r.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"ramas-uniones-y-conflictos"},"Ramas, uniones y conflictos"),(0,t.kt)("p",null,"La rama es una versi\xf3n alternativa del proyecto principal donde se puede modificar y trabajar con el c\xf3digo tal cual estaba en ese momento. Cuando alguna funcionalidad es aprobada se pueden pasar los cambios a la rama principal"),(0,t.kt)("h2",{id:"rama"},"Rama"),(0,t.kt)("p",null,"Saber que el status de las ramas"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git branch\n")),(0,t.kt)("p",null,"Crear rama"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git branch rama-prueba\n")),(0,t.kt)("p",null,"Cambiar de rama actual"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout nombre-rama\n")),(0,t.kt)("p",null,"Crear y cambiarse a una rama nueva"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout -b nombre-nueva-rama\n")),(0,t.kt)("p",null,"Para borrar una rama:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git branch -d nombre-rama\n")),(0,t.kt)("p",null,"Para borrar una rama aunque nunca se hayan fusionado sus cambios a otra (forzar)"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git branch -d nombre-rama -f\n")),(0,t.kt)("h2",{id:"merge"},"Merge"),(0,t.kt)("p",null,"Cuando se unen los cambios de una rama a otra existen 3 posibles casos:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"Fast-forward:")," Todos los commits de la rama origen se pueden integrar a la rama destino sin ning\xfan problema ya que no interfieren."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"Uniones autom\xe1ticos:")," cuando git detecta que trabajamos sobre una rama, con el tiempo integra los cambios en la otra de forma autom\xe1tica siempre y cuando no haya conflitos"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"Existen conflictos:"),"  Se producen cuando hay diferencias entre las dos ramas en el mismo lugar o archivo. Se debe corregir el problema manualmente y crear lo que se conoce como el ",(0,t.kt)("strong",{parentName:"li"},"Merge commit"))),(0,t.kt)("p",null,"Para unir una rama con otra, se debe estar posicionado en la rama que recibir\xe1 los cambios"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git merge rama-origen\n")),(0,t.kt)("h2",{id:"merge-y-conflictos"},"Merge y conflictos"),(0,t.kt)("p",null,"Un conflicto es el choque de cambios donde git no puede integrar los cambios directamente. Esto ocurre posiblemente por que existen cambios sobre mismas l\xedneas y se debe conservar una u otra o ambas, se debe establecer manualmente que se conservar\xe1."),(0,t.kt)("p",null,"Se tiene que editar el archivo, git marca la secci\xf3n del conflicto y se hace un commit con la resoluci\xf3n."),(0,t.kt)("h1",{id:"tags-etiquetas"},"Tags (Etiquetas)"),(0,t.kt)("p",null,"Los tags son utilizados com\xfanmente para marcar en el registro hist\xf3rico una versi\xf3n o release del proyecto"),(0,t.kt)("p",null,"Un tag hace referencia a un commit y a todo el estado de un proyecto en ese momento "),(0,t.kt)("p",null,"Se puede nombrar el tag como resulte m\xe1s conveniente, puede ser una versi\xf3n num\xe9rica o palabra clave"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Crear un tag")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git tag primer-release\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Visualizar los tags")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git tag\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Visualizar un tag espec\xedfico")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git show v1.0.1\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Borrar un tag")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git tag -d nombre-tag\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Crear tag version")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'git tag -a v1.0.0 -m "Version 1.0.0 lista"\n')),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Crear tag en un commit espec\xedfico")),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Se coloca el hash del commit")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'git tag -a v1.0.1 9fceb02 -m "Version alpha"\n')),(0,t.kt)("h2",{id:"nomenclatura-de-una-versi\xf3n"},"Nomenclatura de una versi\xf3n"),(0,t.kt)("p",null,"Tomando como ejemplo:"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"v1.0.2")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"v1: Representa una versi\xf3n con cambios grandes o concretos, que diferencian totalmente  la versi\xf3n anterior. Por lo general se utiliza cuando hay una gran cantidad de funcionalidades"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("ol",{parentName:"li",start:0},(0,t.kt)("li",{parentName:"ol"},"El segundo n\xfamero puede representar la adici\xf3n de una nueva funcionalidad pero no representa por si sola una versi\xf3n mayor"))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("ol",{parentName:"li",start:2},(0,t.kt)("li",{parentName:"ol"},"El tercer n\xfamero generalmente es para la soluci\xf3n de bugs, conforme aparecen y son resueltos, este n\xfamero va incrementando")))))}p.isMDXComponent=!0}}]);