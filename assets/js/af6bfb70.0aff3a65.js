"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7369],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,y=p["".concat(s,".").concat(d)]||p[d]||m[d]||i;return n?r.createElement(y,o(o({ref:t},u),{},{components:n})):r.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},21057:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={},o="Relaciones",l={unversionedId:"Postgres/Relaciones",id:"Postgres/Relaciones",title:"Relaciones",description:"Tipos de relaciones",source:"@site/docs/Postgres/9. Relaciones.md",sourceDirName:"Postgres",slug:"/Postgres/Relaciones",permalink:"/my-website/docs/Postgres/Relaciones",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/Postgres/9. Relaciones.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Subqueries",permalink:"/my-website/docs/Postgres/Subqueries"},next:{title:"Angular",permalink:"/my-website/docs/angular/"}},s={},c=[{value:"Tipos de relaciones",id:"tipos-de-relaciones",level:2},{value:"Keys - Llaves",id:"keys---llaves",level:2},{value:"Tipos",id:"tipos",level:3},{value:"Agregar Primary Key con sql",id:"agregar-primary-key-con-sql",level:3},{value:"Constraint check",id:"constraint-check",level:2},{value:"Restriccion multiple",id:"restriccion-multiple",level:3},{value:"Drop Constraint",id:"drop-constraint",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"relaciones"},"Relaciones"),(0,a.kt)("h2",{id:"tipos-de-relaciones"},"Tipos de relaciones"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Uno a Uno - One to One"),(0,a.kt)("li",{parentName:"ul"},"Uno a muchos - One to many"),(0,a.kt)("li",{parentName:"ul"},"Relaciones a s\xed mismas - Self joining relationships"),(0,a.kt)("li",{parentName:"ul"},"Muchos a muchos - Many to many")),(0,a.kt)("h2",{id:"keys---llaves"},"Keys - Llaves"),(0,a.kt)("p",null,"Las llaves se utilizan para identificar registros"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Identifica un registro de forma \xfanica"),(0,a.kt)("li",{parentName:"ul"},"Una tabla puede tener varios identificadores \xfanicos"),(0,a.kt)("li",{parentName:"ul"},"La llave primaria est\xe1 basada en los requerimientos")),(0,a.kt)("h3",{id:"tipos"},"Tipos"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Primary Key"),(0,a.kt)("li",{parentName:"ul"},"Super Key. Se puede concatenar dos atributos \xfanicos crando una llave primaria a\xfan m\xe1s identificable"),(0,a.kt)("li",{parentName:"ul"},"Candidate Key. La llave primaria es \xfanica, pero puede haber mas atributos \xfanicos como lo son un email, CURP, RFC, etc, que son consideradados como candidate keys"),(0,a.kt)("li",{parentName:"ul"},"Foreign Key. Llaves for\xe1neas son usadas para apuntar a la llave primaria de otra tabla"),(0,a.kt)("li",{parentName:"ul"},"Composite Key. Cuando una clave primaria consta de m\xe1s de un atributo se conoce como clave compuesta."),(0,a.kt)("li",{parentName:"ul"},"Entre otras: Alternate Keys, Artificial Keys")),(0,a.kt)("h3",{id:"agregar-primary-key-con-sql"},"Agregar Primary Key con sql"),(0,a.kt)("p",null,"Tomando una tabla existente:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE mitabla\nADD PRIMARY KEY (atributo_id);\n")),(0,a.kt)("h2",{id:"constraint-check"},"Constraint check"),(0,a.kt)("p",null,"Esta restricci\xf3n sirve para hacer una serie de verificaciones sobre el valor de un atributo en particular"),(0,a.kt)("p",null,"Considerando una tabla existente:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE miTabla CHECK(\n    atributo1 >= 0\n)\n")),(0,a.kt)("h3",{id:"restriccion-multiple"},"Restriccion multiple"),(0,a.kt)("p",null,"Se puede agregar operadores l\xf3gicos para agregar mas de una condici\xf3n:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE country ADD CHECK(\n    (continent = 'Asia') OR\n    (continent = 'South America') OR\n    (continent = 'North America') OR\n    (continent = 'Oceania') OR\n    (continent = 'Antarctica') OR\n    (continent = 'Africa') OR\n    (continent = 'Europe')\n);\n")),(0,a.kt)("h2",{id:"drop-constraint"},"Drop Constraint"),(0,a.kt)("p",null,"Para eliminar un constraint es necesario indicar el nombre de este, usualmente este nombre es mostrado como error al no cumplir con alguna restricci\xf3n"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'ALTER TABLE mytable DROP CONSTRAINT "my_constraint_name";\n')))}m.isMDXComponent=!0}}]);