"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6e3],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>k});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,k=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return t?r.createElement(k,i(i({ref:n},d),{},{components:t})):r.createElement(k,i({ref:n},d))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},68858:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(87462),o=(t(67294),t(3905));const a={},i="HTTP",s={unversionedId:"NET/Backend/http",id:"NET/Backend/http",title:"HTTP",description:'HTTP, de sus siglas en ingl\xe9s: "Hypertext Transfer Protocol", es el nombre de un protocolo el cual nos permite realizar una petici\xf3n de datos y recursos, como pueden ser documentos HTML. Es la base de cualquier intercambio de datos en la Web, y un protocolo de estructura cliente-servidor, esto quiere decir que una petici\xf3n de datos es iniciada por el elemento que recibir\xe1 los datos (el cliente), normalmente un navegador Web.',source:"@site/docs/NET/Backend/01-http.md",sourceDirName:"NET/Backend",slug:"/NET/Backend/http",permalink:"/my-website/docs/NET/Backend/http",draft:!1,editUrl:"https://github.com/Leo-Zubiri/my-website/tree/master/docs/NET/Backend/01-http.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Backend",permalink:"/my-website/docs/NET/Backend/"},next:{title:"Creacion Proyecto API",permalink:"/my-website/docs/NET/Backend/webapi"}},l={},c=[{value:"Metodos de peticion HTTP",id:"metodos-de-peticion-http",level:2},{value:"Codigos de respuesta",id:"codigos-de-respuesta",level:2}],d={toc:c},u="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"http"},"HTTP"),(0,o.kt)("p",null,'HTTP, de sus siglas en ingl\xe9s: "Hypertext Transfer Protocol", es el nombre de un protocolo el cual nos permite realizar una petici\xf3n de datos y recursos, como pueden ser documentos HTML. Es la base de cualquier intercambio de datos en la Web, y un protocolo de estructura cliente-servidor, esto quiere decir que una petici\xf3n de datos es iniciada por el elemento que recibir\xe1 los datos (el cliente), normalmente un navegador Web.'),(0,o.kt)("p",null,"Clientes y servidores se comunican intercambiando mensajes individuales (en contraposici\xf3n a las comunicaciones que utilizan flujos continuos de datos). Los mensajes que env\xeda el cliente, normalmente un navegador Web, se llaman peticiones, y los mensajes enviados por el servidor se llaman respuestas."),(0,o.kt)("p",null,"Los datos que retorne el protocolo al cliente pueden tener distintos formatos:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"HTML"),(0,o.kt)("li",{parentName:"ul"},"JSON"),(0,o.kt)("li",{parentName:"ul"},"XML")),(0,o.kt)("h2",{id:"metodos-de-peticion-http"},"Metodos de peticion HTTP"),(0,o.kt)("p",null,"HTTP define un conjunto de m\xe9todos de petici\xf3n para indicar la acci\xf3n que se desea realizar para un recurso determinado. Aunque estos tambi\xe9n pueden ser sustantivos, estos m\xe9todos de solicitud a veces son llamados HTTP verbs."),(0,o.kt)("p",null,"GET"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"El m\xe9todo GET solicita una representaci\xf3n de un recurso espec\xedfico. Las peticiones que usan el m\xe9todo GET s\xf3lo deben recuperar datos.\n")),(0,o.kt)("p",null,"HEAD"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"El m\xe9todo HEAD pide una respuesta id\xe9ntica a la de una petici\xf3n GET, pero sin el cuerpo de la respuesta.\n")),(0,o.kt)("p",null,"POST"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"El m\xe9todo POST se utiliza para enviar una entidad a un recurso en espec\xedfico, causando a menudo un cambio en el estado o efectos secundarios en el servidor.\n")),(0,o.kt)("p",null,"PUT"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"El modo PUT reemplaza todas las representaciones actuales del recurso de destino con la carga \xfatil de la petici\xf3n.\n")),(0,o.kt)("p",null,"DELETE"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"El m\xe9todo DELETE borra un recurso en espec\xedfico.\n")),(0,o.kt)("p",null,"CONNECT"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"El m\xe9todo CONNECT establece un t\xfanel hacia el servidor identificado por el recurso.\n")),(0,o.kt)("p",null,"OPTIONS"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"El m\xe9todo OPTIONS es utilizado para describir las opciones de comunicaci\xf3n para el recurso de destino.\n")),(0,o.kt)("p",null,"TRACE"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"El m\xe9todo TRACE realiza una prueba de bucle de retorno de mensaje a lo largo de la ruta al recurso de destino.\n")),(0,o.kt)("p",null,"PATCH"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"El m\xe9todo PATCH es utilizado para aplicar modificaciones parciales a un recurso.\n")),(0,o.kt)("h2",{id:"codigos-de-respuesta"},"Codigos de respuesta"),(0,o.kt)("p",null,"Que nuestro servidor retorne un mensaje con una numeracion entre los siguientes rangos:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"100 - 199"),". Codigos informativos"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"200 - 299"),". Codigos de exito, correcto."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"300 - 399"),". Redireccion"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"400 - 499"),". Indican que hay un error"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"500 - 599"),". Indican un error en el servidor")),(0,o.kt)("hr",null),(0,o.kt)("h1",{id:"json"},"JSON"),(0,o.kt)("p",null,"JavaScript Object Notation (JSON) es un formato basado en texto est\xe1ndar para representar datos estructurados en la sintaxis de objetos de JavaScript."),(0,o.kt)("p",null,"En la pr\xe1ctica, .json es un archivo que contiene una serie de datos estructurados en formato de texto y se usa para transferir informaci\xf3n entre sistemas.JSON es una notaci\xf3n para la transferencia de datos que sigue un est\xe1ndar espec\xedfico. Por eso, puede emplearse en diferentes lenguajes de programaci\xf3n y de sistemas."),(0,o.kt)("p",null,"Los datos contenidos en un archivo en formato JSON deben estructurarse por medio de una colecci\xf3n de pares con nombre y valor o deben ser una lista ordenada de valores. Sus elementos tienen que contener:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Clave"),": corresponde al identificador del contenido. Por eso, debe ser una string delimitada por comillas."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Valor"),": representa el contenido correspondiente y puede contener los siguientes tipos de datos: string, array, object, number, boolean o null. ")),(0,o.kt)("p",null,"Ejemplo de fommato json:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "nombre": "HEDSON",\n    "edad": 24,\n    "programador": true,\n    "direccion": {\n        "calle": "",\n        "cp": 89600,\n        "number": 734\n    },\n    "opciones": [16, 31, 28],\n    "productos": [\n        {"nombre":"refresco", "precio": 23.00},\n        {"nombre":"chocolate", "precio": 17.50},\n    ]\n}\n')))}p.isMDXComponent=!0}}]);